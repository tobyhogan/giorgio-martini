{"version":3,"file":"component---src-templates-basic-template-js-64728475aec2a8c6c781.js","mappings":"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","sources":["webpack://giorgio-martini-website/./node_modules/.pnpm/randomcolor@0.6.2/node_modules/randomcolor/randomColor.js","webpack://giorgio-martini-website/./src/helpers.js","webpack://giorgio-martini-website/./src/sketches/DancingLines.js","webpack://giorgio-martini-website/./src/sketches/ProbableFuture.js","webpack://giorgio-martini-website/./src/sketches/Fragment.js","webpack://giorgio-martini-website/./src/sketches/mosaic.js","webpack://giorgio-martini-website/./src/sketches/protocol.js","webpack://giorgio-martini-website/./src/sketches/poster.js","webpack://giorgio-martini-website/./node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/util.js","webpack://giorgio-martini-website/./node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/orient2d.js","webpack://giorgio-martini-website/./node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/orient3d.js","webpack://giorgio-martini-website/./node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/incircle.js","webpack://giorgio-martini-website/./node_modules/.pnpm/robust-predicates@3.0.2/node_modules/robust-predicates/esm/insphere.js","webpack://giorgio-martini-website/./node_modules/.pnpm/delaunator@5.0.1/node_modules/delaunator/index.js","webpack://giorgio-martini-website/./src/sketches/tris.js","webpack://giorgio-martini-website/./src/templates/basicTemplate.js","webpack://giorgio-martini-website/./node_modules/.pnpm/@babel+runtime@7.24.7/node_modules/@babel/runtime/helpers/regeneratorRuntime.js","webpack://giorgio-martini-website/./node_modules/.pnpm/@babel+runtime@7.24.7/node_modules/@babel/runtime/helpers/typeof.js","webpack://giorgio-martini-website/./node_modules/.pnpm/@babel+runtime@7.24.7/node_modules/@babel/runtime/regenerator/index.js"],"sourcesContent":["// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;\n(function (root, factory) {\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n    // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n    // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n})(this, function () {\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n  var randomColor = function (options) {\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n      // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n      // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n      // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n    var H, S, B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n      var totalColors = options.count,\n        colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false);\n      }\n      options.count = null;\n      while (totalColors > colors.length) {\n        var color = randomColor(options);\n        if (seed !== null) {\n          options.seed = seed;\n        }\n        colors.push(color);\n      }\n      options.count = totalColors;\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H, S, B], options);\n  };\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue);\n      var hue = randomWithin(hueRange);\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length;\n      var j = parseInt((hue - hueRange[0]) / step);\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length;\n      } else {\n        colorRanges[j] = true;\n      }\n      var min = (hueRange[0] + j * step) % 359,\n        max = (hueRange[0] + (j + 1) * step) % 359;\n      hueRange = [min, max];\n      hue = randomWithin(hueRange);\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n      return hue;\n    } else {\n      var hueRange = getHueRange(options.hue);\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n      return hue;\n    }\n  }\n  function pickSaturation(hue, options) {\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n    if (options.luminosity === 'random') {\n      return randomWithin([0, 100]);\n    }\n    var saturationRange = getSaturationRange(hue);\n    var sMin = saturationRange[0],\n      sMax = saturationRange[1];\n    switch (options.luminosity) {\n      case 'bright':\n        sMin = 55;\n        break;\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n      case 'light':\n        sMax = 55;\n        break;\n    }\n    return randomWithin([sMin, sMax]);\n  }\n  function pickBrightness(H, S, options) {\n    var bMin = getMinimumBrightness(H, S),\n      bMax = 100;\n    switch (options.luminosity) {\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n      case 'light':\n        bMin = (bMax + bMin) / 2;\n        break;\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n    return randomWithin([bMin, bMax]);\n  }\n  function setFormat(hsv, options) {\n    switch (options.format) {\n      case 'hsvArray':\n        return hsv;\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n      default:\n        return HSVtoHex(hsv);\n    }\n  }\n  function getMinimumBrightness(H, S) {\n    var lowerBounds = getColorInfo(H).lowerBounds;\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n      var s1 = lowerBounds[i][0],\n        v1 = lowerBounds[i][1];\n      var s2 = lowerBounds[i + 1][0],\n        v2 = lowerBounds[i + 1][1];\n      if (S >= s1 && S <= s2) {\n        var m = (v2 - v1) / (s2 - s1),\n          b = v1 - m * s1;\n        return m * S + b;\n      }\n    }\n    return 0;\n  }\n  function getHueRange(colorInput) {\n    if (typeof parseInt(colorInput) === 'number') {\n      var number = parseInt(colorInput);\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n    }\n    if (typeof colorInput === 'string') {\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [hue, hue];\n      }\n    }\n    return [0, 360];\n  }\n  function getSaturationRange(hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n  function getColorInfo(hue) {\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue -= 360;\n    }\n    for (var colorName in colorDictionary) {\n      var color = colorDictionary[colorName];\n      if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n        return colorDictionary[colorName];\n      }\n    }\n    return 'Color not found';\n  }\n  function randomWithin(range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895;\n      var r = Math.random();\n      r += golden_ratio;\n      r %= 1;\n      return Math.floor(range[0] + r * (range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n    }\n  }\n  function HSVtoHex(hsv) {\n    var rgb = HSVtoRGB(hsv);\n    function componentToHex(c) {\n      var hex = c.toString(16);\n      return hex.length == 1 ? '0' + hex : hex;\n    }\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n    return hex;\n  }\n  function defineColor(name, hueRange, lowerBounds) {\n    var sMin = lowerBounds[0][0],\n      sMax = lowerBounds[lowerBounds.length - 1][0],\n      bMin = lowerBounds[lowerBounds.length - 1][1],\n      bMax = lowerBounds[0][1];\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n  }\n  function loadColorBounds() {\n    defineColor('monochrome', null, [[0, 0], [100, 0]]);\n    defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n    defineColor('orange', [18, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n    defineColor('yellow', [46, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n    defineColor('green', [62, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n    defineColor('blue', [178, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n    defineColor('purple', [257, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n    defineColor('pink', [282, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n  }\n  function HSVtoRGB(hsv) {\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {\n      h = 1;\n    }\n    if (h === 360) {\n      h = 359;\n    }\n\n    // Rebase the h,s,v values\n    h = h / 360;\n    var s = hsv[1] / 100,\n      v = hsv[2] / 100;\n    var h_i = Math.floor(h * 6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      r = 256,\n      g = 256,\n      b = 256;\n    switch (h_i) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n    return result;\n  }\n  function HexToHSB(hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n      green = parseInt(hex.substr(2, 2), 16) / 255,\n      blue = parseInt(hex.substr(4, 2), 16) / 255;\n    var cMax = Math.max(red, green, blue),\n      delta = cMax - Math.min(red, green, blue),\n      saturation = cMax ? delta / cMax : 0;\n    switch (cMax) {\n      case red:\n        return [60 * ((green - blue) / delta % 6) || 0, saturation, cMax];\n      case green:\n        return [60 * ((blue - red) / delta + 2) || 0, saturation, cMax];\n      case blue:\n        return [60 * ((red - green) / delta + 4) || 0, saturation, cMax];\n    }\n  }\n  function HSVtoHSL(hsv) {\n    var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      k = (2 - s) * v;\n    return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n  }\n  function stringToInteger(string) {\n    var total = 0;\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i);\n    }\n    return total;\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue) {\n    if (!isNaN(colorHue)) {\n      var number = parseInt(colorHue);\n      if (number < 360 && number > 0) {\n        return getColorInfo(colorHue).hueRange;\n      }\n    } else if (typeof colorHue === 'string') {\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n        if (color.hueRange) {\n          return color.hueRange;\n        }\n      } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0];\n        return getColorInfo(hue).hueRange;\n      }\n    }\n    return [0, 360];\n  }\n  return randomColor;\n});","export const getRandomArbitrary = (min, max) => {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\n\r\nexport const getRandomFromArray = (items) => {\r\n  let result = items[Math.floor(Math.random() * items.length)]\r\n  return result\r\n}\r\n","import React, { Component } from \"react\"\r\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\r\n\r\nlet dancingLine1\r\nlet dancingLine2\r\nlet worm1\r\nlet worm2\r\n\r\nfunction isOdd(num) { // TODO move to utils\r\n  return num % 2;\r\n}\r\n\r\nfunction Sketch(p5) {\r\n  \r\n\r\n  p5.setup = () => {\r\n    let wormOpts1 = {color: 255, weight: p5.width/25, length: p5.height/8}\r\n    let wormOpts2 = {color: 255, weight: p5.width/5, length: p5.height/20}\r\n  \r\n    p5.createCanvas(800,500)\r\n    p5.background(\"#18020C\")\r\n    worm1 = worm(wormOpts1)\r\n    worm2 = worm(wormOpts2)\r\n    dancingLine1 = dancingLine(false, p5)\r\n    dancingLine2 = dancingLine(true, p5)\r\n  }\r\n\r\n  p5.draw = () => {\r\n    p5.background(\"#18020C\")\r\n    p5.translate(p5.width/2, p5.height/2)\r\n    worm1.display()\r\n    worm2.display()\r\n    dancingLine1.display()\r\n    dancingLine2.display()\r\n  }\r\n\r\n  function worm({color, weight, length}) {\r\n    console.log({color, weight, length})\r\n    let history = []\r\n    let v1 = p5.createVector(0,0)\r\n    let x1Angle = Math.random() * 10\r\n    let y1Angle = Math.random() * 10\r\n    let x1AngleOff = 0\r\n    let y1AngleOff = 0\r\n    let r1 = p5.width / 3\r\n    let linesAmt = length\r\n    let xoff = 0.0\r\n    \r\n    function display() {\r\n      xoff = xoff + 0.01\r\n      let n = p5.noise(xoff)\r\n      let mappedFill = p5.map(n, 0, 1, -250, 200)\r\n\r\n      if (history.length > linesAmt) history.splice(0,1)\r\n\r\n      v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\r\n      history.push([v1.x, v1.y]) \r\n      p5.stroke(color) \r\n      p5.strokeWeight(weight)\r\n      p5.strokeCap(p5.PROJECT)\r\n\r\n      p5.beginShape()\r\n        history.forEach((linea, i) => {\r\n          p5.curveVertex(linea[0], linea[1])\r\n          })\r\n      p5.endShape()\r\n\r\n      x1Angle += x1AngleOff + 0.010\r\n      y1Angle += y1AngleOff + 0.011\r\n    }\r\n\r\n    return {\r\n      display,\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\nfunction dancingLine(flip = false, p5) {\r\n  let history = []\r\n  let linesAmt =60\r\n  let col = 255\r\n  let v1 = p5.createVector(0,0)\r\n  let v2 = p5.createVector(0,0)\r\n  \r\n  let x1Angle = flip ? 90 : 0\r\n  let y1Angle = flip ? 90 : 0\r\n  let x2Angle = flip ? 90 : 0\r\n  let y2Angle = flip ? 90 : 0\r\n\r\n  let x1AngleOff = 0.03\r\n  let y1AngleOff = 0.002\r\n  let x2AngleOff = 0.015\r\n  let y2AngleOff = 0.02  \r\n  \r\n  let r1 = flip ? 250 : 300 \r\n  let r2 = flip ? 250 : 300 \r\n\r\n  function display() {\r\n    v1.set(r1 * p5.sin(x1Angle), r1 * p5.sin(y1Angle))\r\n    v2.set(r2 * p5.sin(x2Angle), r2 * p5.sin(y2Angle))\r\n\r\n    history.push([v1.x, v1.y, v2.x, v2.y]) \r\n    \r\n    if (history.length > linesAmt) history.splice(0,1)\r\n    \r\n    col = flip\r\n      ? \"#E5FFDE\"\r\n      : \"#634B66\"\r\n\r\n    history.forEach((linea, i) => {\r\n      p5.stroke(col) \r\n      p5.strokeWeight(2)\r\n      p5.line(linea[0],linea[1],linea[2],linea[3])\r\n    })\r\n\r\n    x1Angle += flip ? x1AngleOff : x1AngleOff + 0.01\r\n    y1Angle += flip ? y1AngleOff : y1AngleOff + 0.01\r\n    x2Angle += flip ? x2AngleOff : x2AngleOff + 0.01\r\n    y2Angle += flip ? y2AngleOff : y2AngleOff + 0.01\r\n  }\r\n\r\n  return {\r\n    display,\r\n  }\r\n}\r\n\r\nexport default class DancingLines extends Component{\r\n  render() {\r\n    return <P5Wrapper sketch={Sketch} />\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { loadableP5 as P5Wrapper } from '../components/loadable';\r\nimport { randomFromRange } from '../utils'\r\n\r\nlet canvasWidth = 400\r\nlet canvasHeight = canvasWidth * 1.5\r\nlet grid\r\nlet amtOfHorizontalCircles = 40\r\nlet minCircleSize = 5\r\nconst maxCircleSize = 10\r\nlet rotation = 7\r\nlet _background = '#1a1822'\r\nlet cols = 30\r\nlet rows = 30\r\n\r\nfunction Sketch(p5) {\r\n  let background = p5.color(_background)\r\n\r\n  p5.setup = () => {\r\n    p5.createCanvas(canvasWidth, canvasHeight, p5.WEBGL)\r\n    p5.smooth()\r\n    p5.background(background)\r\n    grid = _grid(cols, rows)\r\n  }\r\n\r\n  p5.draw = () => {\r\n    p5.rotateX(rotation)\r\n    p5.frameRate(20)\r\n    p5.translate(0, -90, p5.height / 3.5) // fix magic number\r\n    p5.background(background)\r\n    grid.forEach(x => x.display())\r\n    slideRow(grid)\r\n  }\r\n\r\n  const circle = (fillColor, x, y, size) => {\r\n    let xpos = x\r\n    let ypos = y\r\n    return {\r\n      xpos,\r\n      ypos,\r\n      display() {\r\n        p5.noStroke()\r\n        p5.fill(fillColor)\r\n        p5.ellipse(xpos - p5.width / 2, ypos - p5.height / 2.5, size, size)\r\n      },\r\n      slide(amt) {\r\n        if (ypos > p5.height) {\r\n          size = randomFromRange(minCircleSize, maxCircleSize)\r\n          ypos = p5.height / rows - p5.height / rows\r\n        }\r\n        ypos += amt\r\n      },\r\n    }\r\n  }\r\n\r\n  function randomLevelFromHsl(h, s, min, max) {\r\n    let mult = Math.random() > 0.7 ? 1 : 0.5\r\n    return `hsl(${h}, ${s}%, ${p5.random(min * mult, max * mult).toFixed()}%)`\r\n  }\r\n\r\n  function _grid(cols, rows) {\r\n    let grid = []\r\n    for (let x = 0; x < cols + 1; x++) {\r\n      for (let y = 0; y < rows + 1; y++) {\r\n        let color = randomLevelFromHsl(230, 10, 10, 50)\r\n        let size = randomFromRange(minCircleSize, maxCircleSize)\r\n        grid.push(circle(color, x * p5.width / cols, y * p5.height / rows, size))\r\n      }\r\n    }\r\n    return grid\r\n  }\r\n\r\n  function slideRow() {\r\n    grid.forEach(circle => {\r\n      circle.slide(p5.height / rows)\r\n    })\r\n  }\r\n}\r\n\r\nexport default class ProbableFuture extends Component {\r\n  render() {\r\n    return <P5Wrapper sketch={Sketch} />\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { loadableP5 as P5Wrapper } from '../components/loadable';\r\nimport { getRandomFromArray} from '../helpers'\r\n\r\nlet img\r\nlet uploadImg\r\nconst cols = 35\r\nconst rows = 35\r\nlet matrix = []\r\nlet w\r\nlet h\r\nlet input;\r\n\r\nfunction Sketch(p5) {\r\n  function saveColors(matrix) {\r\n    matrix.forEach((cell, i) => {\r\n      matrix[i].push(p5.get(cell[0], cell[1]))\r\n    })\r\n  }\r\n\r\n  function shuffleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n    }\r\n  }\r\n\r\n  function buildNewMatrix(rows, cols, xS, yS) {\r\n    let m = []\r\n    for (let i = 0; i < rows + 1; i++) {\r\n      for (let j = 0; j < cols + 1; j++) {\r\n        m.push([i * xS, j * yS])\r\n      }\r\n    }\r\n    return m\r\n  }\r\n\r\n  p5.preload = () => {\r\n    img = p5.loadImage('https://i.imgur.com/6B788ty.jpg')\r\n  }\r\n\r\n  p5.setup = () => {\r\n    var myCanvas = p5.createCanvas(img.width, img.height)\r\n    w = p5.width / cols\r\n    h = p5.height / rows\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        matrix.push([i * w, j * h])\r\n      }\r\n    }\r\n  }\r\n\r\n  p5.draw = () => {\r\n    p5.frameRate(5)\r\n    let _newCols = p5.map(p5.mouseX, 0, p5.width, 0, 40)\r\n    let newCols = Math.ceil(_newCols)\r\n    let _newRows = p5.map(p5.mouseY, 0, p5.height, 0, 40)\r\n    let newRows = Math.ceil(_newRows)\r\n\r\n    if (p5.mouseX > 1 && p5.mouseX < p5.width && p5.mouseY > 1 && p5.mouseY < p5.height) {\r\n      w = p5.width / newCols\r\n      h = p5.height / newRows\r\n      matrix = buildNewMatrix(newCols, newRows, p5.width / newCols, p5.height / newRows)\r\n      p5.frameRate(40)\r\n    } else {\r\n      w = p5.width / cols\r\n      h = p5.height / rows\r\n      matrix = buildNewMatrix(cols, rows, p5.width / cols, p5.height / rows)\r\n      p5.frameRate(5)\r\n    }\r\n\r\n    p5.image(img, 0, 0)\r\n    saveColors(matrix)\r\n    p5.background(0)\r\n    shuffleArray(matrix)\r\n\r\n    matrix.forEach((cell, i) => {\r\n      p5.fill(cell[2])\r\n      p5.noStroke()\r\n      p5.ellipseMode(p5.CORNER)\r\n      p5.ellipse(cell[0], cell[1], w, h)\r\n    })\r\n  }\r\n}\r\n\r\nexport default class Fragment extends Component {\r\n  render() {\r\n    return <P5Wrapper sketch={Sketch} />\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport {loadableP5 as P5Wrapper} from '../components/loadable';\r\n\r\nlet frame\r\nlet canvas \r\nlet img\r\nlet uploadImg\r\nlet gridAmount = 10\r\nlet matrix = []\r\nlet xSpacing\r\nlet ySpacing\r\nlet w\r\nlet h\r\nlet input\r\nlet colors\r\nlet dotsSize\r\n\r\nlet palette = [\r\n  '#ffa69e',\r\n  '#faf3dd',\r\n  '#b8f2e6',\r\n  '#aed9e0',\r\n  '#5e6472'\r\n]\r\n\r\n\r\nfunction Sketch(p5) {\r\n\r\n  function getColors(items) {\r\n    let _items = [...items]\r\n    let randomColId = Math.floor(Math.random() * _items.length)\r\n    _items.splice(randomColId, 1)\r\n  \r\n    return {\r\n      bg: items[randomColId],\r\n      colors: _items\r\n    }\r\n  }\r\n  \r\n  function getRandomFromArray(items) {\r\n    let result = items[Math.floor(Math.random() * items.length)]\r\n    return result\r\n  }\r\n  \r\n  function randomDeg(_x, _y, w, h) {\r\n    let randomNumber = (Math.random() * 10).toFixed(1) // make util \r\n    if (randomNumber >= 0 && randomNumber < 2.5) {\r\n      return Math.random()*200\r\n    } else if (randomNumber >= 2.5 && randomNumber < 5) {\r\n      return p5.HALF_PI\r\n    } else if (randomNumber >= 5 && randomNumber < 7.5) {\r\n      return p5.PI\r\n    } else {\r\n      return p5.TWO_PI\r\n    }\r\n  }\r\n  \r\n  function randomSign(w,h) {\r\n    let randomNumber = (Math.random() * 10).toFixed(1)\r\n  \r\n    if (randomNumber >= 0 && randomNumber < 3.3) {\r\n      let col1 = getRandomFromArray(colors.colors)\r\n      p5.fill(col1)\r\n      p5.arc(0, 0, w, h, 0, p5.HALF_PI)\r\n      p5.fill(getRandomFromArray(colors.colors))\r\n    } else if (randomNumber >= 3.3 && randomNumber < 6.6) {\r\n      let col2 = getRandomFromArray(colors.colors)\r\n      p5.fill(col2)\r\n      p5.arc(0, 0, w, h, 0, p5.PI)\r\n      p5.ellipse(0, 0, dotsSize)\r\n      p5.fill(getRandomFromArray(colors.colors))\r\n    } else if (randomNumber >= 6.6 && randomNumber <= 10) {\r\n      let col3 = getRandomFromArray(colors.colors)\r\n      p5.fill(col3)\r\n      p5.arc(0, 0, w, h, 0, p5.PI)\r\n      let col4 = getRandomFromArray(colors.colors)\r\n      p5.fill(col4)\r\n      p5.arc(0, 0, w, h, p5.PI, p5.PI + p5.HALF_PI)\r\n      p5.fill(getRandomFromArray(colors.colors))\r\n    } \r\n  }\r\n  \r\n  function Spot(x, y, w, h) {\r\n    let _x = x\r\n    let _y = y\r\n  \r\n    function display(xoff, yoff) {\r\n      p5.noStroke()\r\n      p5.push()\r\n        p5.translate(_x+xoff/2,_y+yoff/2)\r\n        let r = randomDeg()\r\n        p5.rotate(r)\r\n        randomSign(w,h)\r\n        p5.translate(0, 0)\r\n      p5.pop()\r\n    }\r\n  \r\n    return {\r\n      display,\r\n    }\r\n  }\r\n\r\n  p5.setup = () => {\r\n    canvas = p5.createCanvas(600,600)\r\n  }\r\n\r\n  p5.draw = () => {\r\n    p5.frameCount > 0\r\n    ? p5.frameRate(5)\r\n    : p5.frameRate(1)\r\n\r\n    canvas.mouseOver(() => p5.frameRate(0))\r\n    canvas.mouseOut(() => p5.frameRate(10))\r\n\r\n  gridAmount = Math.ceil(p5.random(1,15))\r\n  w = p5.width/gridAmount\r\n  h = p5.height/gridAmount\r\n  xSpacing = p5.width/gridAmount\r\n  ySpacing = p5.height/gridAmount\r\n  colors = getColors(palette)\r\n  dotsSize = p5.random(p5.width/1000, p5.width/18)\r\n\r\n  for (let i = 0; i < gridAmount; i++) {\r\n    for (let j = 0; j < gridAmount; j++) {\r\n      matrix.push([\r\n        Spot(i*xSpacing,j*ySpacing, xSpacing, ySpacing)\r\n      ])\r\n    }\r\n  }\r\n\r\n  p5.background(colors.bg)\r\n\r\n  matrix.forEach((cell, i) => {\r\n    p5.noStroke()\r\n    cell[0].display(xSpacing, ySpacing)\r\n  })\r\n\r\n  matrix = []\r\n  }\r\n}\r\n\r\n\r\nexport default class Mosaic extends Component{\r\n  render() {\r\n    return <P5Wrapper sketch={Sketch} />\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport {loadableP5 as P5Wrapper} from '../components/loadable'\r\nimport { getRandomArbitrary } from \"../helpers\"\r\n\r\nlet img\r\nlet circle1 \r\nlet circle2 \r\nlet squares \r\nlet cropElement\r\nlet c1Opts\r\nlet c2Opts\r\nlet squaresOpts\r\nlet color = '#fff'\r\n\r\nfunction evenRandomNumber(amt) { // add to utils\r\n  return Math.ceil( Math.random() * amt / 2 ) * 2\r\n}\r\n\r\nfunction Sketch(p5) {\r\n  function cropElement(opts) {\r\n    let r \r\n    let angle\r\n    let introAngle\r\n    let outroAngle\r\n    let amt\r\n    let posArray = []\r\n    let introPosArray = []\r\n    let outroPosArray = []\r\n    let animation = 0\r\n    let initialAnimation = animation\r\n    let maxAnimation = 150\r\n    let resting = 0\r\n    let initialResting = 40\r\n    let fade = 80\r\n    let isFill = true\r\n    let strokeWeight = []\r\n\r\n    function drawingSettings(isFill, strokeWeight) {\r\n      if (isFill) {\r\n        p5.fill(color)\r\n        p5.noStroke()        \r\n      } else {\r\n        p5.noFill() \r\n        p5.strokeWeight(strokeWeight) \r\n        p5.stroke(color)  \r\n      }\r\n    }\r\n\r\n    function generatePositions() {\r\n      p5.angleMode(p5.DEGREES)\r\n      r = getRandomArbitrary(opts.minSize, opts.maxSize) // use native\r\n      amt = evenRandomNumber(opts.amt)\r\n      angle = 360 / amt\r\n      // these are some ugly magic numbers... try to fix the jumping between intro and outro other way...\r\n      introAngle = 362.5 / amt\r\n      outroAngle = 364.5 / amt\r\n      let cropRadius = getRandomArbitrary(opts.cropRadius[0], opts.cropRadius[1])\r\n\r\n      if(opts.strokeWeight === undefined || opts.strokeWeight.length === 0) {\r\n        isFill = true\r\n      } else {\r\n        const [strokeMin, strokeMax] = opts.strokeWeight\r\n        isFill = false\r\n        strokeWeight = getRandomArbitrary(strokeMin, strokeMax)\r\n      } \r\n\r\n      // we should just use one posArray, but we are doing a hack\r\n      // of scaling the rotation so there is no jumping between intro and outro\r\n      posArray = [] // reseting array b4 filling it again...\r\n      for (let i = 0; i < amt; i++) {\r\n        posArray.push([angle * i, cropRadius])\r\n      }    \r\n      introPosArray = []\r\n      for (let i = 0; i < amt; i++) {\r\n        introPosArray.push([introAngle * i, cropRadius])\r\n      }    \r\n      outroPosArray = []\r\n      for (let i = 0; i < amt; i++) {\r\n        outroPosArray.push([outroAngle * i, cropRadius])\r\n      }    \r\n    }\r\n\r\n    function display() {\r\n      // Intro...\r\n      if (animation < maxAnimation) {\r\n        drawingSettings(isFill, strokeWeight)\r\n        animation++\r\n        introPosArray.forEach((pos, i) => {\r\n          let subtractor = pos[0] / animation\r\n          let rotation = pos[0] - subtractor\r\n          \r\n          p5.push() // make this whole part into a function and repeat below...\r\n            p5.rotate(rotation)\r\n            p5.translate(pos[1], 0)\r\n            if (opts.ellipse) {\r\n              p5.ellipse(0, 0, r, r)\r\n            } else {\r\n              p5.rectMode(p5.CENTER)\r\n                p5.push()\r\n                  p5.rotate(45)\r\n                  p5.rect(0, 0, r, r)\r\n                p5.pop()\r\n            }\r\n          p5.pop()\r\n        })\r\n      } else if (animation === maxAnimation && resting <= initialResting ) {\r\n        // Resting\r\n        drawingSettings(isFill, strokeWeight)\r\n        resting ++\r\n        posArray.forEach((pos, i) => {\r\n          p5.push()\r\n            p5.rotate(pos[0])\r\n            p5.translate(pos[1], 0)\r\n            if (opts.ellipse) {\r\n              p5.ellipse(0, 0, r, r)\r\n            } else {\r\n              p5.rectMode(p5.CENTER)\r\n              p5.push()\r\n                p5.rotate(45)\r\n                p5.rect(0, 0, r, r)\r\n              p5.pop()\r\n            }\r\n          p5.pop()\r\n        })   \r\n      } else if (resting >= initialResting && fade > 1 ) {\r\n      // Outro\r\n      drawingSettings(isFill, strokeWeight)\r\n        fade--\r\n        outroPosArray.forEach((pos, i) => {\r\n          let outroRotation = pos[0] - (pos[0] / fade)\r\n          p5.push()\r\n            p5.rotate(-outroRotation)\r\n            p5.translate(pos[1], 0)\r\n            if (opts.ellipse) {\r\n              p5.ellipse(0, 0, r, r)\r\n            } else {\r\n              p5.rectMode(p5.CENTER)\r\n              p5.push()\r\n                p5.rotate(45)\r\n                p5.rect(0, 0, r, r)\r\n              p5.pop()\r\n            }\r\n          p5.pop()\r\n        })        \r\n      } else if (fade === 1) {\r\n        // Reset values to start again...\r\n        generatePositions()\r\n        fade = 80\r\n        animation = 0\r\n        resting = 0        \r\n      }\r\n    }    \r\n    return {\r\n      generatePositions,\r\n      display\r\n    }\r\n  }\r\n\r\n  p5.setup = () => {\r\n    p5.createCanvas(600, 600)\r\n    p5.translate(p5.width / 2, p5.height / 2) \r\n\r\n    c1Opts = {\r\n      amt: 8,\r\n      maxSize: p5.width/2,\r\n      minSize: p5.width/8,\r\n      cropRadius: [p5.width/8, p5.width/4],\r\n      ellipse: true,\r\n    }\r\n    \r\n    c2Opts = {\r\n      amt: 8,\r\n      maxSize: p5.width/4,\r\n      minSize: p5.width/8,\r\n      cropRadius: [p5.width/8, p5.width/3],\r\n      strokeWeight: [10, 15],\r\n      ellipse: true,\r\n    }\r\n\r\n    squaresOpts = {\r\n      amt: 4,\r\n      maxSize: p5.width/6,\r\n      minSize: p5.width/8,\r\n      strokeWeight: [15, 35],\r\n      cropRadius: [p5.width/6, p5.width/4],\r\n    }\r\n    \r\n    circle1 = cropElement(c1Opts)\r\n    circle2 = cropElement(c2Opts)\r\n    squares = cropElement(squaresOpts)\r\n    p5.translate(-p5.width / 2, -p5.height / 2) \r\n    circle1.generatePositions()\r\n    circle2.generatePositions()\r\n    squares.generatePositions()\r\n  }\r\n\r\n  p5.draw = () => {\r\n    p5.translate(p5.width / 2, p5.height / 2) \r\n    // reset to black\r\n    p5.blendMode(p5.REPLACE) \r\n    p5.background(0)\r\n    // set to difference to make the ngative space stuff\r\n    p5.blendMode(p5.DIFFERENCE) \r\n    circle1.display()\r\n    circle2.display()\r\n    squares.display()\r\n    p5.filter(p5.INVERT)\r\n  }\r\n}\r\n\r\nexport default class Protocol extends Component{\r\n  render() {\r\n    return <P5Wrapper sketch={Sketch} />\r\n  }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport { loadableP5 as P5Wrapper } from '../components/loadable'\r\nimport randomColor from 'randomcolor'\r\nimport {Vector} from \"p5\"\r\nimport '@fontsource/passion-one'\r\nimport { randomFromRange } from '../utils'\r\n\r\n// Find out if we need p5, or if P5Wrapper includes p5... then remove p5 and import vector from P5Wrapper.\r\nlet textArray = [\"AMAZING\", \"SHORTY\", \"HEYA!\", \"YUP\", \"BOOM\", \"FANTASTIC\", \"BALLIN'\", \"FAKE\", \"NICE\", \"GREAT\", \"FABULOUS\", \"FAB\", \"BEAST\", \"UNREAL\", \"MARVEL\", \"WOW\", \"ZOO\", \"CRAZY\", \"FUN\", \"RAD\", \"GOOD\", \"GORGEOUS\", \"REALLY\", \"YEAH\", \"LOVELY\", \"SCARY\", \"BAM!\", \"HOT\", \"SWEET\", \"NEAT\", \"SPACE\", \"COOL\", \"PURO\", \"SUPERB\", \"HURRA\", \"ALRIGHT\", \"INSANE\", \"MAMA\", \"PERFECT\", \"BREATH\", \"GRIND\", \"RAW\", \"WHAT\", \"OKAY\", \"BOSSY\", \"CHECK\", \"DAMN\", \"STONED\", \"DADA\", \"CUTE\", \"MK3\", \"AKA\", \"GROOVY\", \"DONE\", \"WICKED\", \"HYFR\", \"GLORY\", \"YUMMY\", \"BIG\", \"EPIC\", \"EXTRA\", \"DROP\", \"HUGE\", \"STUNNED\", \"HOAX\", \"INK\", \"FIRE\", \"HELLA\", \"LOOP\", \"YO\", \"EASY\", \"GEIL\", \"BIG\", \"SWEET\", \"KING\", \"OUTTA\", \"DANDY\", \"YIPPEE\", \"PIMPIN'\", \"YAY\", \"DUH\", \"FEAR\", \"STASH\", \"SURE\", \"PHAT\", \"GEEZ\", \"BAE\", \"BABE\", \"BABY\", \"PONG\", \"YASS\", \"NOISE\", \"HA!\", \"FUCK\", \"HOLLER\", \"RAVE\", \"CLASSIC\", \"GENIUS\", \"DOOMED\", \"BLUNT\", \"HELLO\", \"BANG\", \"LOOSE\", \"HOLLY\", \"MASSIVE\", \"FRESH\", \"SHINY\", \"PEACHY\", \"A-HA\", \"HELP!\", \"BOOZE\", \"BOYZ\", \"GIRLZ\", \"TAMALE\", \"HEROIN\", \"SAVAGE\", \"VIBE\", \"MUTTER\", \"GO\", \"BUDHA\", \"FATHER\", \"DANDY\", \"HEY\", \"0.0009\", \"MARY\", \"GANG\", \"FYI\", \"RALLY\", \"FRENZY\"]\r\nlet textShadow\r\nlet randomXposForBubbles\r\nlet randomYposForBubbles\r\nlet indexOfArrayOfRandomXposForBubbles\r\nlet indexOfArrayOfRandomYposForBubbles\r\nlet randomXposForRects\r\nlet randomYposForRects\r\nlet randomXposForLines\r\nlet randomYposForLines\r\nlet colsArray\r\nlet randomSizesForBubbles\r\nlet randomSizesForRects\r\nlet colorTonesForBubbles\r\nlet colorTonesForRect\r\nlet collectionOfRotations\r\nlet arrayOfRandomPosForLines\r\nlet linesAngle\r\nlet collectionOfLengths\r\nlet collectionOfRotsForBeziers\r\nlet pointsForBezier\r\nlet someWord\r\nlet bubblesArr = []\r\nlet linesArr = []\r\nlet initialBubblesXPos\r\nlet initialBubblesYPos\r\nlet canvasX = 300\r\nlet canvasY = 500\r\nlet degreeProbs = [45, 135]\r\n// Amount of elements\r\nlet amountOfBubbles = 40\r\nlet amountOfRects = 30\r\nlet amountOfLines = 25\r\nlet amountOfBeziers = 4\r\nlet maxBubblesXpos = 0.5 * canvasX\r\nlet maxBubblesYpos = 0.6 * canvasY\r\nlet maxRectsXpos = 0.8 * canvasX\r\nlet maxRectsYpos = 0.8 * canvasY\r\n\r\nfunction Sketch(p5) {\r\n  p5.setup = () => {\r\n    p5.colorMode(p5.HSB, 360)\r\n    p5.createCanvas(canvasX, canvasY)\r\n    // Initialize values for first run\r\n    randomXposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesXpos)\r\n    randomYposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesYpos)\r\n    initialBubblesXPos = randomXposForBubbles.map(x => x + p5.random(-canvasX / 2, canvasX / 2))\r\n    initialBubblesYPos = randomYposForBubbles.map(x => x + p5.random(-canvasY / 2, canvasY / 2))\r\n    randomXposForRects = evenRandomNums(amountOfRects, 0, maxRectsXpos)\r\n    randomYposForRects = evenRandomNums(amountOfRects, 0, maxRectsYpos)\r\n    randomXposForLines = evenRandomNums(amountOfLines, 0, canvasX / 2)\r\n    randomYposForLines = evenRandomNums(amountOfLines, 0, canvasY / 2)\r\n    colsArray = randomColor({ luminosity: 'light', format: 'hsl', count: 5 })\r\n    randomSizesForBubbles = returnArrOfRandomSizes(amountOfBubbles, 10, 80)\r\n    randomSizesForRects = returnArrOfRandomSizes(amountOfRects, 5, 30)\r\n    colorTonesForBubbles = returnCollectionOfColorTones(colsArray[1], amountOfBubbles)\r\n    colorTonesForRect = returnCollectionOfColorTones(colsArray[2], amountOfRects)\r\n    collectionOfRotations = returnCollectionOfRotations(amountOfRects)\r\n    linesAngle = returnlinesAngle()\r\n    collectionOfLengths = returnCollectionOfLengths(amountOfLines, 100)\r\n    someWord = returnRandomFromArray(textArray)\r\n    // pointsForBezier = returnCollectionOfPointsForBezier(amountOfBeziers)\r\n    // collectionOfRotsForBeziers = returnCollectionOfRotations(amountOfBeziers)\r\n\r\n    for (let i = 0; i < amountOfBubbles; i++) {\r\n      bubblesArr.push(new Bubble(initialBubblesXPos[i], initialBubblesYPos[i], randomXposForBubbles[i], randomYposForBubbles[i], randomSizesForBubbles[i], colorTonesForBubbles[i]))\r\n    }\r\n\r\n    for (let i = 0; i < amountOfLines; i++) {\r\n      linesArr.push(new linea(colsArray[2], linesAngle, collectionOfLengths[i], randomXposForLines[i], randomYposForLines[i]))\r\n    }\r\n  }\r\n\r\n  p5.draw = () => {\r\n\r\n    p5.translate(p5.width / 2, p5.height / 2)\r\n    p5.background(colsArray[0])\r\n\r\n    for (let i = 0; i < bubblesArr.length; i++) {\r\n      bubblesArr[i].wobble();\r\n    }\r\n\r\n    for (let i = 0; i < linesArr.length; i++) {\r\n      linesArr[i].slideIn();\r\n    }\r\n\r\n    addText(colsArray, someWord)\r\n    drawRects(randomXposForRects, randomYposForRects, randomSizesForRects, collectionOfRotations, colorTonesForRect)\r\n  }\r\n\r\n  p5.mouseClicked = () => {\r\n    // Positions\r\n    someWord = returnRandomFromArray(textArray)\r\n    randomXposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesXpos)\r\n    randomYposForBubbles = evenRandomNums(amountOfBubbles, 0, maxBubblesYpos)\r\n    randomXposForRects = evenRandomNums(amountOfRects, 0, maxRectsXpos)\r\n    randomYposForRects = evenRandomNums(amountOfRects, 0, maxRectsYpos)\r\n    randomXposForLines = evenRandomNums(amountOfLines, 0, canvasX / 2)\r\n    randomYposForLines = evenRandomNums(amountOfLines, 0, canvasY / 2)\r\n    initialBubblesXPos = randomXposForBubbles.map(x => x + p5.random(-canvasX / 2, canvasX / 2))\r\n    initialBubblesYPos = randomYposForBubbles.map(x => x + p5.random(-canvasY / 2, canvasY / 2))\r\n    // pointsForBezier = returnCollectionOfPointsForBezier(amountOfBeziers)\r\n    // Collections of colors, sizes etc..\r\n    colsArray = randomColor({ luminosity: 'light', format: 'hsl', count: 5 })\r\n    randomSizesForBubbles = returnArrOfRandomSizes(amountOfBubbles, 10, 80)\r\n    randomSizesForRects = returnArrOfRandomSizes(amountOfRects, 5, 30)\r\n    colorTonesForBubbles = returnCollectionOfColorTones(colsArray[1], amountOfBubbles)\r\n    colorTonesForRect = returnCollectionOfColorTones(colsArray[2], amountOfRects)\r\n    collectionOfRotations = returnCollectionOfRotations(amountOfRects)\r\n    linesAngle = returnlinesAngle()\r\n    collectionOfLengths = returnCollectionOfLengths(amountOfLines, 60)\r\n    // collectionOfRotsForBeziers = returnCollectionOfRotations(amountOfBeziers)\r\n    addText(colsArray, someWord)\r\n\r\n    bubblesArr = []\r\n    for (let i = 0; i < amountOfBubbles; i++) {\r\n      bubblesArr.push(new Bubble(initialBubblesXPos[i], initialBubblesYPos[i], randomXposForBubbles[i], randomYposForBubbles[i], randomSizesForBubbles[i], colorTonesForBubbles[i]))\r\n    }\r\n\r\n    linesArr = []\r\n    for (let i = 0; i < amountOfLines; i++) {\r\n      linesArr.push(new linea(colsArray[3], linesAngle, collectionOfLengths[i], randomXposForLines[i], randomYposForLines[i]))\r\n    }\r\n  }\r\n\r\n\r\n  function Bubble(initialXpos, initialYpos, indexOfArrayOfRandomXposForBubbles, indexOfArrayOfRandomYposForBubbles, randomSizesArr, colorTonesForBubbles) {\r\n    this.x = indexOfArrayOfRandomXposForBubbles\r\n    this.y = indexOfArrayOfRandomYposForBubbles\r\n    this.target = p5.createVector(0, 0)\r\n    this.initialXpos = initialXpos\r\n    this.initialYpos = initialYpos\r\n    this.pos = p5.createVector(this.initialXpos / 2, this.initialYpos / 2)\r\n    this.vel = p5.createVector(0, 0)\r\n    this.strength = 0.15 // 0.15\r\n    this.drag = 0.90 //  0.76\r\n    this.diameter = randomSizesArr\r\n    this.tone = colorTonesForBubbles\r\n\r\n    this.wobble = function () {\r\n      this.target.set(this.x / 2, this.y / 2)\r\n      this.force = Vector.sub(this.target, this.pos)\r\n      this.force = this.force.mult(this.strength)\r\n      this.vel = this.vel.mult(this.drag)\r\n      this.vel = this.vel.add(this.force);\r\n      this.pos = this.pos.add(this.vel);\r\n\r\n      p5.fill(this.tone)\r\n      p5.noStroke()\r\n      p5.ellipse(this.pos.x, this.pos.y, this.diameter, this.diameter)\r\n    }\r\n  }\r\n\r\n  function drawRects(randomXposForRects, randomYposForRects, randomSizesArr, rot, colorTonesForRect) {\r\n    randomXposForRects.forEach((o, i) => {\r\n      const x = o\r\n      const y = randomYposForRects[i]\r\n      const elementSize = randomSizesArr[i]\r\n      p5.noStroke()\r\n      p5.push()\r\n      p5.translate(x / 2, y / 2)\r\n      p5.rotate(rot[i])\r\n      p5.rectMode(p5.CENTER)\r\n      const c = p5.color('hsla(0, 0%, 0%, 0.05)')\r\n      p5.fill(c)\r\n      p5.rect(-4, -4, elementSize, elementSize)\r\n      p5.fill(colorTonesForRect[i])\r\n      p5.rect(0, 0, elementSize, elementSize)\r\n      p5.pop()\r\n    })\r\n  }\r\n\r\n  function returnlinesAngle() {\r\n    let angle = Math.random() < 0.5 ? 45 : 90\r\n    return angle\r\n  }\r\n\r\n  function returnCollectionOfLengths(amountOfLines, lengthMax) {\r\n    let lengthsArray = []\r\n    while (lengthsArray.length < amountOfLines) {\r\n      lengthsArray.push(p5.random(2, lengthMax))\r\n    }\r\n    return lengthsArray\r\n  }\r\n\r\n  function linea(colsArray, linesAngle, collectionOfLengthsElement, xPos, yPos) {\r\n    this.angle = Vector.fromAngle(linesAngle)\r\n    this.pos = p5.createVector(xPos, yPos)\r\n    this.vel = p5.createVector(this.angle.x, this.angle.y)\r\n    this.vel.mult(30)\r\n    this.acc = p5.createVector(this.angle.x / 3, this.angle.y / 3)\r\n    this.strokeWeight = Math.ceil(Math.random()*10)\r\n\r\n    this.slideIn = function () {\r\n      // Mirroring\r\n      if (this.pos.x > (canvasX / 2)) {\r\n        this.pos.x = -canvasX / 2\r\n      } else if (this.pos.x < -canvasX / 2) {\r\n        this.pos.x = canvasX / 2\r\n      }\r\n      if (this.pos.y > (canvasY / 2)) {\r\n        this.pos.y = -canvasY / 2\r\n      } else if (this.pos.y < -canvasY / 2) {\r\n        this.pos.y = canvasY / 2\r\n      }\r\n      // Stop if speed is 0\r\n      if (this.vel.x < 0.4 && this.vel.x > 0) {\r\n        this.acc.set(0, 0)\r\n        this.vel.set(0, 0)\r\n      }\r\n\r\n      this.vel.sub(this.acc)\r\n      this.pos.sub(this.vel)\r\n      p5.push()\r\n        p5.translate(this.pos.x, this.pos.y)\r\n        p5.push()\r\n          p5.rotate(linesAngle)\r\n          p5.translate(-collectionOfLengthsElement / 2, 0)\r\n          p5.stroke(colsArray)\r\n          p5.strokeCap(p5.SQUARE)\r\n          p5.strokeWeight(this.strokeWeight)\r\n          p5.line(0, 0, collectionOfLengthsElement, 0)\r\n        p5.pop()\r\n      p5.pop()\r\n    }\r\n  }\r\n\r\n  function addText(colsArray, someWord) {\r\n    p5.textSize(60)\r\n    p5.fill('hsl(160, 100%, 100%)')\r\n    p5.textAlign(p5.CENTER)\r\n    p5.rectMode(p5.CENTER)\r\n    p5.textFont('Passion One')\r\n    p5.strokeWeight(10)\r\n    p5.fill('hsla(160, 100%, 100%)')\r\n    p5.stroke(colsArray[3])\r\n    p5.text(someWord, 0, canvasY / 2.3, canvasX / 1.5, canvasY)\r\n  }\r\n\r\n\r\n  function returnCollectionOfPointsForBezier(amtOfBeziers) {\r\n    let arr = []\r\n    for (let i = 0; i < amtOfBeziers; i++) {\r\n      arr.push([])\r\n      // Here we get 2 random nums to use as the origin of the bezier\r\n      // and then we create the anchor points by adding or subtracting some random value from x or y... \r\n      const origin = evenRandomNums(2, 0, canvasX / 2),\r\n        x = Math.round(Math.random() < 0.5 ? origin[0] : origin[0] * -1),\r\n        y = Math.round(Math.random() < 0.5 ? origin[1] : origin[1] * -1),\r\n        // Fist point \r\n        anchorOneX = x + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\r\n        anchorOneY = y - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\r\n        controlOneX = x - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\r\n        controlOneY = y - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\r\n        // Second Point\r\n        anchorTwoX = x - p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\r\n        anchorTwoY = y + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\r\n        controlTwoX = x + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2)),\r\n        controlTwoY = y + p5.random(p5.random(canvasX / 4, canvasX * 2), p5.random(canvasX / 4, canvasX * 2))\r\n      arr[i].push(anchorOneX, anchorOneY, controlOneX, controlOneY, anchorTwoX, anchorTwoY, controlTwoX, controlTwoY)\r\n    }\r\n    return arr\r\n  }\r\n\r\n  function drawBeziers(bezierPointsArr, colsArray, rotationsArr) {\r\n    for (let i = 0; i < bezierPointsArr.length; i++) {\r\n      p5.strokeWeight(1)\r\n      p5.noFill()\r\n      // stroke( colsArray[4] )\r\n      let c = p5.color('hsla(0, 0%, 100%, 0.2)')\r\n      p5.stroke(c)\r\n      p5.push()\r\n      p5.rotate(rotationsArr[i])\r\n      // debugger ellipses to see where the points are\r\n      // ellipse(bezierPointsArr[i][0],bezierPointsArr[i][1], 10,10)\r\n      // ellipse(bezierPointsArr[i][2],bezierPointsArr[i][3], 10,10)\r\n      // ellipse(bezierPointsArr[i][6],bezierPointsArr[i][7], 10,10)\r\n      // ellipse(bezierPointsArr[i][4],bezierPointsArr[i][5], 10,10)\r\n      p5.bezier(bezierPointsArr[i][0], bezierPointsArr[i][1], bezierPointsArr[i][2], bezierPointsArr[i][3], bezierPointsArr[i][6], bezierPointsArr[i][7], bezierPointsArr[i][4], bezierPointsArr[i][5])\r\n      p5.pop()\r\n    }\r\n  }\r\n\r\n\r\n  function drawTextShadow(someWord) {\r\n    p5.textShadow.clear()\r\n    p5.textShadow.translate(p5.width / 2, p5.height / 2)\r\n    p5.textShadow.textSize(60)\r\n    p5.textShadow.textAlign(p5.CENTER)\r\n    p5.textShadow.rectMode(p5.CENTER)\r\n    p5.textShadow.textFont('Passion One')\r\n    p5.textShadow.strokeWeight(10)\r\n    p5.textShadow.stroke('hsl(0, 0%, 20%)')\r\n    p5.textShadow.text(someWord, 0, canvasY / 2.3, canvasX / 1.5, canvasY)\r\n    p5.textShadow.translate(-p5.width / 2, -p5.height / 2)\r\n    //textShadow.filter(BLUR,24)\r\n  }\r\n\r\n  function returnArrFromHslColor(stringInHsl) {\r\n    const tono = p5.color(stringInHsl),\r\n      h = p5.hue(tono),\r\n      firstPartOfSat = stringInHsl.substring(stringInHsl.indexOf(\",\") + 1),\r\n      satArray = firstPartOfSat.split(\",\"),\r\n      s = parseInt(satArray[0]),\r\n      l = p5.lightness(tono)\r\n    return [Math.round(h), Math.round(s), Math.round(l)]\r\n  }\r\n\r\n  function returnCollectionOfColorTones(colsArrayItem, amt) {\r\n    let colorValues = returnArrFromHslColor(colsArrayItem),\r\n      colVarAmt,\r\n      lightnessRandom,\r\n      array = []\r\n  \r\n    while (array.length < amt) {\r\n      colVarAmt = Math.round(Math.random() * 3)\r\n      lightnessRandom = Math.round(Math.random() < 0.5 ? colorValues[2] + colVarAmt : colorValues[2] - colVarAmt)\r\n      array.push(`hsl(${colorValues[0]}, ${colorValues[1]}%, ${lightnessRandom}%)`)\r\n    }\r\n    return array\r\n  }  \r\n\r\n}\r\n\r\n\r\n// Helpers\r\nfunction returnCollectionOfRotations(amt) {\r\n  let array = []\r\n  while (array.length < amt) {\r\n    array.push(randomFromRange(0,360))\r\n    // array.push(p5.random(360))\r\n  }\r\n  return array\r\n}\r\n\r\n\r\n\r\nfunction returnArrOfRandomSizes(amt, elmntSizeMin, elmntSizeMax) {\r\n  let arr = []\r\n  while (arr.length < amt) {\r\n    arr.push(Math.round(randomFromRange(elmntSizeMin, elmntSizeMax)))\r\n  }\r\n  return arr\r\n}\r\n\r\nfunction returnRandomFromArray(array) {\r\n  return array[Math.floor(Math.random() * array.length)]\r\n}\r\n\r\nfunction evenRandomNums(amt, min, max) {\r\n  const array = []\r\n  while (array.length < amt) {\r\n  // randomFromRange() nums have a 50% of being multiplied by -1 so they're evenly distributed on screen\r\n    array.push(Math.round(Math.random() < 0.5 ? randomFromRange(min, max) : randomFromRange(min, max) * -1))\r\n  }\r\n  return array\r\n}\r\n\r\nexport default class Poster extends Component {\r\n  render() {\r\n    return <P5Wrapper sketch={Sketch} />\r\n  }\r\n}\r\n\r\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n  let Q, Qnew, hh, bvirt;\n  let enow = e[0];\n  let fnow = f[0];\n  let eindex = 0;\n  let findex = 0;\n  if (fnow > enow === fnow > -enow) {\n    Q = enow;\n    enow = e[++eindex];\n  } else {\n    Q = fnow;\n    fnow = f[++findex];\n  }\n  let hindex = 0;\n  if (eindex < elen && findex < flen) {\n    if (fnow > enow === fnow > -enow) {\n      Qnew = enow + Q;\n      hh = Q - (Qnew - enow);\n      enow = e[++eindex];\n    } else {\n      Qnew = fnow + Q;\n      hh = Q - (Qnew - fnow);\n      fnow = f[++findex];\n    }\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    while (eindex < elen && findex < flen) {\n      if (fnow > enow === fnow > -enow) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n      } else {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n      }\n      Q = Qnew;\n      if (hh !== 0) {\n        h[hindex++] = hh;\n      }\n    }\n  }\n  while (eindex < elen) {\n    Qnew = Q + enow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (enow - bvirt);\n    enow = e[++eindex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  while (findex < flen) {\n    Qnew = Q + fnow;\n    bvirt = Qnew - Q;\n    hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n    fnow = f[++findex];\n    Q = Qnew;\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n  return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n  let Q, sum, hh, product1, product0;\n  let bvirt, c, ahi, alo, bhi, blo;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  let enow = e[0];\n  Q = enow * b;\n  c = splitter * enow;\n  ahi = c - (c - enow);\n  alo = enow - ahi;\n  hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n  let hindex = 0;\n  if (hh !== 0) {\n    h[hindex++] = hh;\n  }\n  for (let i = 1; i < elen; i++) {\n    enow = e[i];\n    product1 = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n    sum = Q + product0;\n    bvirt = sum - Q;\n    hh = Q - (sum - bvirt) + (product0 - bvirt);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n    Q = product1 + sum;\n    hh = sum - (Q - product1);\n    if (hh !== 0) {\n      h[hindex++] = hh;\n    }\n  }\n  if (Q !== 0 || hindex === 0) {\n    h[hindex++] = Q;\n  }\n  return hindex;\n}\nexport function negate(elen, e) {\n  for (let i = 0; i < elen; i++) e[i] = -e[i];\n  return elen;\n}\nexport function estimate(elen, e) {\n  let Q = e[0];\n  for (let i = 1; i < elen; i++) Q += e[i];\n  return Q;\n}\nexport function vec(n) {\n  return new Float64Array(n);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum } from './util.js';\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n  let acxtail, acytail, bcxtail, bcytail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const acx = ax - cx;\n  const bcx = bx - cx;\n  const acy = ay - cy;\n  const bcy = by - cy;\n  s1 = acx * bcy;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcx;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  B[3] = u3;\n  let det = estimate(4, B);\n  let errbound = ccwerrboundB * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - acx;\n  acxtail = ax - (acx + bvirt) + (bvirt - cx);\n  bvirt = bx - bcx;\n  bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n  bvirt = ay - acy;\n  acytail = ay - (acy + bvirt) + (bvirt - cy);\n  bvirt = by - bcy;\n  bcytail = by - (bcy + bvirt) + (bvirt - cy);\n  if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n    return det;\n  }\n  errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n  det += acx * bcytail + bcy * acxtail - (acy * bcxtail + bcx * acytail);\n  if (det >= errbound || -det >= errbound) return det;\n  s1 = acxtail * bcy;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcy;\n  bhi = c - (c - bcy);\n  blo = bcy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcx;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcx;\n  bhi = c - (c - bcx);\n  blo = bcx - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const C1len = sum(4, B, 4, u, C1);\n  s1 = acx * bcytail;\n  c = splitter * acx;\n  ahi = c - (c - acx);\n  alo = acx - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acy * bcxtail;\n  c = splitter * acy;\n  ahi = c - (c - acy);\n  alo = acy - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const C2len = sum(C1len, C1, 4, u, C2);\n  s1 = acxtail * bcytail;\n  c = splitter * acxtail;\n  ahi = c - (c - acxtail);\n  alo = acxtail - ahi;\n  c = splitter * bcytail;\n  bhi = c - (c - bcytail);\n  blo = bcytail - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = acytail * bcxtail;\n  c = splitter * acytail;\n  ahi = c - (c - acytail);\n  alo = acytail - ahi;\n  c = splitter * bcxtail;\n  bhi = c - (c - bcxtail);\n  blo = bcxtail - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  u[3] = u3;\n  const Dlen = sum(C2len, C2, 4, u, D);\n  return D[Dlen - 1];\n}\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n  const detleft = (ay - cy) * (bx - cx);\n  const detright = (ax - cx) * (by - cy);\n  const det = detleft - detright;\n  const detsum = Math.abs(detleft + detright);\n  if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n  return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n  return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, scale } from './util.js';\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\nlet fin = vec(192);\nlet fin2 = vec(192);\nfunction finadd(finlen, alen, a) {\n  finlen = sum(finlen, fin, alen, a, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n  if (xtail === 0) {\n    if (ytail === 0) {\n      a[0] = 0;\n      b[0] = 0;\n      return 1;\n    } else {\n      negate = -ytail;\n      s1 = negate * ax;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    }\n  } else {\n    if (ytail === 0) {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      a[1] = s1;\n      negate = -xtail;\n      s1 = negate * by;\n      c = splitter * negate;\n      ahi = c - (c - negate);\n      alo = negate - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      b[1] = s1;\n      return 2;\n    } else {\n      s1 = xtail * ay;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * ay;\n      bhi = c - (c - ay);\n      blo = ay - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = ytail * ax;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * ax;\n      bhi = c - (c - ax);\n      blo = ax - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      a[3] = u3;\n      s1 = ytail * bx;\n      c = splitter * ytail;\n      ahi = c - (c - ytail);\n      alo = ytail - ahi;\n      c = splitter * bx;\n      bhi = c - (c - bx);\n      blo = bx - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = xtail * by;\n      c = splitter * xtail;\n      ahi = c - (c - xtail);\n      alo = xtail - ahi;\n      c = splitter * by;\n      bhi = c - (c - by);\n      blo = by - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      b[3] = u3;\n      return 4;\n    }\n  }\n}\nfunction tailadd(finlen, a, b, k, z) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n  s1 = a * b;\n  c = splitter * a;\n  ahi = c - (c - a);\n  alo = a - ahi;\n  c = splitter * b;\n  bhi = c - (c - b);\n  blo = b - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  c = splitter * k;\n  bhi = c - (c - k);\n  blo = k - bhi;\n  _i = s0 * k;\n  c = splitter * s0;\n  ahi = c - (c - s0);\n  alo = s0 - ahi;\n  u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n  _j = s1 * k;\n  c = splitter * s1;\n  ahi = c - (c - s1);\n  alo = s1 - ahi;\n  _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n  _k = _i + _0;\n  bvirt = _k - _i;\n  u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n  u3 = _j + _k;\n  u[2] = _k - (u3 - _j);\n  u[3] = u3;\n  finlen = finadd(finlen, 4, u);\n  if (z !== 0) {\n    c = splitter * z;\n    bhi = c - (c - z);\n    blo = z - bhi;\n    _i = s0 * z;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * z;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n  }\n  return finlen;\n}\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail;\n  let adytail, bdytail, cdytail;\n  let adztail, bdztail, cdztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(scale(4, bc, adz, _8), _8, scale(4, ca, bdz, _8b), _8b, _16), _16, scale(4, ab, cdz, _8), _8, fin);\n  let det = estimate(finlen, fin);\n  let errbound = o3derrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  bvirt = az - adz;\n  adztail = az - (adz + bvirt) + (bvirt - dz);\n  bvirt = bz - bdz;\n  bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n  bvirt = cz - cdz;\n  cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0 && adztail === 0 && bdztail === 0 && cdztail === 0) {\n    return det;\n  }\n  errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n  det += adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) + bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) + cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n  const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n  const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n  const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n  finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n  const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n  finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n  const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n  finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n  if (adztail !== 0) {\n    finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n    finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n  }\n  if (bdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n    finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n  }\n  if (cdztail !== 0) {\n    finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n    finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n  }\n  if (adxtail !== 0) {\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n    }\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n    }\n  }\n  if (bdxtail !== 0) {\n    if (cdytail !== 0) {\n      finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n    }\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n    }\n  }\n  if (cdxtail !== 0) {\n    if (adytail !== 0) {\n      finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n    }\n    if (bdytail !== 0) {\n      finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n    }\n  }\n  return fin[finlen - 1];\n}\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const det = adz * (bdxcdy - cdxbdy) + bdz * (cdxady - adxcdy) + cdz * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) + (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) + (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n  const errbound = o3derrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const adz = az - dz;\n  const bdz = bz - dz;\n  const cdz = cz - dz;\n  return adx * (bdy * cdz - bdz * cdy) + bdx * (cdy * adz - cdz * ady) + cdx * (ady * bdz - adz * bdy);\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale } from './util.js';\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\nlet fin = vec(1152);\nlet fin2 = vec(1152);\nfunction finadd(finlen, a, alen) {\n  finlen = sum(finlen, fin, a, alen, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  let abtlen, bctlen, catlen;\n  let abttlen, bcttlen, cattlen;\n  let n1, n0;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(sum(scale(scale(4, bc, adx, _8), _8, adx, _16), _16, scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, sum(scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16, scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, sum(scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16, scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n  let det = estimate(finlen, fin);\n  let errbound = iccerrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n  errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n  if (adxtail !== 0) {\n    axtbclen = scale(4, bc, adxtail, axtbc);\n    finlen = finadd(finlen, sum_three(scale(axtbclen, axtbc, 2 * adx, _16), _16, scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b, scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n  if (adytail !== 0) {\n    aytbclen = scale(4, bc, adytail, aytbc);\n    finlen = finadd(finlen, sum_three(scale(aytbclen, aytbc, 2 * ady, _16), _16, scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b, scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n  if (bdxtail !== 0) {\n    bxtcalen = scale(4, ca, bdxtail, bxtca);\n    finlen = finadd(finlen, sum_three(scale(bxtcalen, bxtca, 2 * bdx, _16), _16, scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n  }\n  if (bdytail !== 0) {\n    bytcalen = scale(4, ca, bdytail, bytca);\n    finlen = finadd(finlen, sum_three(scale(bytcalen, bytca, 2 * bdy, _16), _16, scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b, scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n  if (cdxtail !== 0) {\n    cxtablen = scale(4, ab, cdxtail, cxtab);\n    finlen = finadd(finlen, sum_three(scale(cxtablen, cxtab, 2 * cdx, _16), _16, scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b, scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n  if (cdytail !== 0) {\n    cytablen = scale(4, ab, cdytail, cytab);\n    finlen = finadd(finlen, sum_three(scale(cytablen, cytab, 2 * cdy, _16), _16, scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b, scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n  }\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = sum(4, u, 4, v, bct);\n      s1 = bdxtail * cdytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n    if (adxtail !== 0) {\n      const len = scale(bctlen, bct, adxtail, _16c);\n      finlen = finadd(finlen, sum(scale(axtbclen, axtbc, adxtail, _16), _16, scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * adx, _16), _16, scale(len2, _8, adxtail, _16b), _16b, scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n      }\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n      }\n    }\n    if (adytail !== 0) {\n      const len = scale(bctlen, bct, adytail, _16c);\n      finlen = finadd(finlen, sum(scale(aytbclen, aytbc, adytail, _16), _16, scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * ady, _16), _16, scale(len2, _8, adytail, _16b), _16b, scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = sum(4, u, 4, v, cat);\n      s1 = cdxtail * adytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n    if (bdxtail !== 0) {\n      const len = scale(catlen, cat, bdxtail, _16c);\n      finlen = finadd(finlen, sum(scale(bxtcalen, bxtca, bdxtail, _16), _16, scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * bdx, _16), _16, scale(len2, _8, bdxtail, _16b), _16b, scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n      }\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n      }\n    }\n    if (bdytail !== 0) {\n      const len = scale(catlen, cat, bdytail, _16c);\n      finlen = finadd(finlen, sum(scale(bytcalen, bytca, bdytail, _16), _16, scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * bdy, _16), _16, scale(len2, _8, bdytail, _16b), _16b, scale(len, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = sum(4, u, 4, v, abt);\n      s1 = adxtail * bdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n    if (cdxtail !== 0) {\n      const len = scale(abtlen, abt, cdxtail, _16c);\n      finlen = finadd(finlen, sum(scale(cxtablen, cxtab, cdxtail, _16), _16, scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * cdx, _16), _16, scale(len2, _8, cdxtail, _16b), _16b, scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n      }\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n      }\n    }\n    if (cdytail !== 0) {\n      const len = scale(abtlen, abt, cdytail, _16c);\n      finlen = finadd(finlen, sum(scale(cytablen, cytab, cdytail, _16), _16, scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * cdy, _16), _16, scale(len2, _8, cdytail, _16b), _16b, scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n  return fin[finlen - 1];\n}\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const alift = adx * adx + ady * ady;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const blift = bdx * bdx + bdy * bdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const clift = cdx * cdx + cdy * cdy;\n  const det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  const errbound = iccerrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const ady = ay - dy;\n  const bdx = bx - dx;\n  const bdy = by - dy;\n  const cdx = cx - dx;\n  const cdy = cy - dy;\n  const abdet = adx * bdy - bdx * ady;\n  const bcdet = bdx * cdy - cdx * bdy;\n  const cadet = cdx * ady - adx * cdy;\n  const alift = adx * adx + ady * ady;\n  const blift = bdx * bdx + bdy * bdy;\n  const clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}","import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate } from './util.js';\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n  return sum_three(scale(4, a, az, _8), _8, scale(4, b, bz, _8b), _8b, scale(4, c, cz, _8c), _8c, _16, out);\n}\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n  const len = sum(sum(alen, a, blen, b, _48), _48, negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n  return sum_three(scale(scale(len, _96, x, _192), _192, x, _384x), _384x, scale(scale(len, _96, y, _192), _192, y, _384y), _384y, scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  s1 = ax * by;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ay;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  s1 = bx * cy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * by;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cx * dy;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * cy;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  cd[3] = u3;\n  s1 = dx * ey;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * dy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  de[3] = u3;\n  s1 = ex * ay;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * ey;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ea[3] = u3;\n  s1 = ax * cy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * ay;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ac[3] = u3;\n  s1 = bx * dy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * by;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bd[3] = u3;\n  s1 = cx * ey;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * cy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ce[3] = u3;\n  s1 = dx * ay;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * dy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  da[3] = u3;\n  s1 = ex * by;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ey;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  eb[3] = u3;\n  const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n  const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n  const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n  const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n  const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n  const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n  const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n  const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n  const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n  const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n  const deterlen = sum_three(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, sum_three(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n  return deter[deterlen - 1];\n}\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n  const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n  return sum_three(scale(scale(len, _24, x, _48), _48, x, xdet), xdet, scale(scale(len, _24, y, _48), _48, y, ydet), ydet, scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n  let ab3, bc3, cd3, da3, ac3, bd3;\n  let aextail, bextail, cextail, dextail;\n  let aeytail, beytail, ceytail, deytail;\n  let aeztail, beztail, ceztail, deztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  s1 = aex * bey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bex * aey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ab3 = _j + _i;\n  bvirt = ab3 - _j;\n  ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n  ab[3] = ab3;\n  s1 = bex * cey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * bey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bc3 = _j + _i;\n  bvirt = bc3 - _j;\n  bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n  bc[3] = bc3;\n  s1 = cex * dey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * cey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  cd3 = _j + _i;\n  bvirt = cd3 - _j;\n  cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n  cd[3] = cd3;\n  s1 = dex * aey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = aex * dey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  da3 = _j + _i;\n  bvirt = da3 - _j;\n  da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n  da[3] = da3;\n  s1 = aex * cey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * aey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ac3 = _j + _i;\n  bvirt = ac3 - _j;\n  ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n  ac[3] = ac3;\n  s1 = bex * dey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * bey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bd3 = _j + _i;\n  bvirt = bd3 - _j;\n  bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n  bd[3] = bd3;\n  const finlen = sum(sum(negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, sum(negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n  let det = estimate(finlen, fin);\n  let errbound = isperrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - aex;\n  aextail = ax - (aex + bvirt) + (bvirt - ex);\n  bvirt = ay - aey;\n  aeytail = ay - (aey + bvirt) + (bvirt - ey);\n  bvirt = az - aez;\n  aeztail = az - (aez + bvirt) + (bvirt - ez);\n  bvirt = bx - bex;\n  bextail = bx - (bex + bvirt) + (bvirt - ex);\n  bvirt = by - bey;\n  beytail = by - (bey + bvirt) + (bvirt - ey);\n  bvirt = bz - bez;\n  beztail = bz - (bez + bvirt) + (bvirt - ez);\n  bvirt = cx - cex;\n  cextail = cx - (cex + bvirt) + (bvirt - ex);\n  bvirt = cy - cey;\n  ceytail = cy - (cey + bvirt) + (bvirt - ey);\n  bvirt = cz - cez;\n  ceztail = cz - (cez + bvirt) + (bvirt - ez);\n  bvirt = dx - dex;\n  dextail = dx - (dex + bvirt) + (bvirt - ex);\n  bvirt = dy - dey;\n  deytail = dy - (dey + bvirt) + (bvirt - ey);\n  bvirt = dz - dez;\n  deztail = dz - (dez + bvirt) + (bvirt - ez);\n  if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) {\n    return det;\n  }\n  errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n  const abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);\n  const bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);\n  const cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);\n  const daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);\n  const aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);\n  const bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);\n  det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  const aexbey = aex * bey;\n  const bexaey = bex * aey;\n  const ab = aexbey - bexaey;\n  const bexcey = bex * cey;\n  const cexbey = cex * bey;\n  const bc = bexcey - cexbey;\n  const cexdey = cex * dey;\n  const dexcey = dex * cey;\n  const cd = cexdey - dexcey;\n  const dexaey = dex * aey;\n  const aexdey = aex * dey;\n  const da = dexaey - aexdey;\n  const aexcey = aex * cey;\n  const cexaey = cex * aey;\n  const ac = aexcey - cexaey;\n  const bexdey = bex * dey;\n  const dexbey = dex * bey;\n  const bd = bexdey - dexbey;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  const det = clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab) + (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n  const aezplus = Math.abs(aez);\n  const bezplus = Math.abs(bez);\n  const cezplus = Math.abs(cez);\n  const dezplus = Math.abs(dez);\n  const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n  const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n  const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n  const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n  const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n  const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n  const permanent = (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift + (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift + (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift + (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n  const errbound = isperrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n  const aex = pax - pex;\n  const bex = pbx - pex;\n  const cex = pcx - pex;\n  const dex = pdx - pex;\n  const aey = pay - pey;\n  const bey = pby - pey;\n  const cey = pcy - pey;\n  const dey = pdy - pey;\n  const aez = paz - pez;\n  const bez = pbz - pez;\n  const cez = pcz - pez;\n  const dez = pdz - pez;\n  const ab = aex * bey - bex * aey;\n  const bc = bex * cey - cex * bey;\n  const cd = cex * dey - dex * cey;\n  const da = dex * aey - aex * dey;\n  const ac = aex * cey - cex * aey;\n  const bd = bex * dey - dex * bey;\n  const abc = aez * bc - bez * ac + cez * ab;\n  const bcd = bez * cd - cez * bd + dez * bc;\n  const cda = cez * da + dez * ac + aez * cd;\n  const dab = dez * ab + aez * bd + bez * da;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  return clift * dab - dlift * abc + (alift * bcd - blift * cda);\n}","const EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\nimport { orient2d } from 'robust-predicates';\nexport default class Delaunator {\n  static from(points) {\n    let getX = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultGetX;\n    let getY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGetY;\n    const n = points.length;\n    const coords = new Float64Array(n * 2);\n    for (let i = 0; i < n; i++) {\n      const p = points[i];\n      coords[2 * i] = getX(p);\n      coords[2 * i + 1] = getY(p);\n    }\n    return new Delaunator(coords);\n  }\n  constructor(coords) {\n    const n = coords.length >> 1;\n    if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n    this.coords = coords;\n\n    // arrays that will store the triangulation graph\n    const maxTriangles = Math.max(2 * n - 5, 0);\n    this._triangles = new Uint32Array(maxTriangles * 3);\n    this._halfedges = new Int32Array(maxTriangles * 3);\n\n    // temporary arrays for tracking the edges of the advancing convex hull\n    this._hashSize = Math.ceil(Math.sqrt(n));\n    this._hullPrev = new Uint32Array(n); // edge to prev edge\n    this._hullNext = new Uint32Array(n); // edge to next edge\n    this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n    this._hullHash = new Int32Array(this._hashSize); // angular edge hash\n\n    // temporary arrays for sorting points\n    this._ids = new Uint32Array(n);\n    this._dists = new Float64Array(n);\n    this.update();\n  }\n  update() {\n    const {\n      coords,\n      _hullPrev: hullPrev,\n      _hullNext: hullNext,\n      _hullTri: hullTri,\n      _hullHash: hullHash\n    } = this;\n    const n = coords.length >> 1;\n\n    // populate an array of point indices; calculate input data bbox\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n    for (let i = 0; i < n; i++) {\n      const x = coords[2 * i];\n      const y = coords[2 * i + 1];\n      if (x < minX) minX = x;\n      if (y < minY) minY = y;\n      if (x > maxX) maxX = x;\n      if (y > maxY) maxY = y;\n      this._ids[i] = i;\n    }\n    const cx = (minX + maxX) / 2;\n    const cy = (minY + maxY) / 2;\n    let i0, i1, i2;\n\n    // pick a seed point close to the center\n    for (let i = 0, minDist = Infinity; i < n; i++) {\n      const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n      if (d < minDist) {\n        i0 = i;\n        minDist = d;\n      }\n    }\n    const i0x = coords[2 * i0];\n    const i0y = coords[2 * i0 + 1];\n\n    // find the point closest to the seed\n    for (let i = 0, minDist = Infinity; i < n; i++) {\n      if (i === i0) continue;\n      const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n      if (d < minDist && d > 0) {\n        i1 = i;\n        minDist = d;\n      }\n    }\n    let i1x = coords[2 * i1];\n    let i1y = coords[2 * i1 + 1];\n    let minRadius = Infinity;\n\n    // find the third point which forms the smallest circumcircle with the first two\n    for (let i = 0; i < n; i++) {\n      if (i === i0 || i === i1) continue;\n      const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n      if (r < minRadius) {\n        i2 = i;\n        minRadius = r;\n      }\n    }\n    let i2x = coords[2 * i2];\n    let i2y = coords[2 * i2 + 1];\n    if (minRadius === Infinity) {\n      // order collinear points by dx (or dy if all x are identical)\n      // and return the list as a hull\n      for (let i = 0; i < n; i++) {\n        this._dists[i] = coords[2 * i] - coords[0] || coords[2 * i + 1] - coords[1];\n      }\n      quicksort(this._ids, this._dists, 0, n - 1);\n      const hull = new Uint32Array(n);\n      let j = 0;\n      for (let i = 0, d0 = -Infinity; i < n; i++) {\n        const id = this._ids[i];\n        const d = this._dists[id];\n        if (d > d0) {\n          hull[j++] = id;\n          d0 = d;\n        }\n      }\n      this.hull = hull.subarray(0, j);\n      this.triangles = new Uint32Array(0);\n      this.halfedges = new Uint32Array(0);\n      return;\n    }\n\n    // swap the order of the seed points for counter-clockwise orientation\n    if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n      const i = i1;\n      const x = i1x;\n      const y = i1y;\n      i1 = i2;\n      i1x = i2x;\n      i1y = i2y;\n      i2 = i;\n      i2x = x;\n      i2y = y;\n    }\n    const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n    this._cx = center.x;\n    this._cy = center.y;\n    for (let i = 0; i < n; i++) {\n      this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n    }\n\n    // sort the points by distance from the seed triangle circumcenter\n    quicksort(this._ids, this._dists, 0, n - 1);\n\n    // set up the seed triangle as the starting hull\n    this._hullStart = i0;\n    let hullSize = 3;\n    hullNext[i0] = hullPrev[i2] = i1;\n    hullNext[i1] = hullPrev[i0] = i2;\n    hullNext[i2] = hullPrev[i1] = i0;\n    hullTri[i0] = 0;\n    hullTri[i1] = 1;\n    hullTri[i2] = 2;\n    hullHash.fill(-1);\n    hullHash[this._hashKey(i0x, i0y)] = i0;\n    hullHash[this._hashKey(i1x, i1y)] = i1;\n    hullHash[this._hashKey(i2x, i2y)] = i2;\n    this.trianglesLen = 0;\n    this._addTriangle(i0, i1, i2, -1, -1, -1);\n    for (let k = 0, xp, yp; k < this._ids.length; k++) {\n      const i = this._ids[k];\n      const x = coords[2 * i];\n      const y = coords[2 * i + 1];\n\n      // skip near-duplicate points\n      if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n      xp = x;\n      yp = y;\n\n      // skip seed triangle points\n      if (i === i0 || i === i1 || i === i2) continue;\n\n      // find a visible edge on the convex hull using edge hash\n      let start = 0;\n      for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n        start = hullHash[(key + j) % this._hashSize];\n        if (start !== -1 && start !== hullNext[start]) break;\n      }\n      start = hullPrev[start];\n      let e = start,\n        q;\n      while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n        e = q;\n        if (e === start) {\n          e = -1;\n          break;\n        }\n      }\n      if (e === -1) continue; // likely a near-duplicate point; skip it\n\n      // add the first triangle from the point\n      let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n      // recursively flip triangles from the point until they satisfy the Delaunay condition\n      hullTri[i] = this._legalize(t + 2);\n      hullTri[e] = t; // keep track of boundary triangles on the hull\n      hullSize++;\n\n      // walk forward through the hull, adding more triangles and flipping recursively\n      let n = hullNext[e];\n      while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n        t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n        hullTri[i] = this._legalize(t + 2);\n        hullNext[n] = n; // mark as removed\n        hullSize--;\n        n = q;\n      }\n\n      // walk backward from the other side, adding more triangles and flipping\n      if (e === start) {\n        while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n          t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n          this._legalize(t + 2);\n          hullTri[q] = t;\n          hullNext[e] = e; // mark as removed\n          hullSize--;\n          e = q;\n        }\n      }\n\n      // update the hull indices\n      this._hullStart = hullPrev[i] = e;\n      hullNext[e] = hullPrev[n] = i;\n      hullNext[i] = n;\n\n      // save the two new edges in the hash table\n      hullHash[this._hashKey(x, y)] = i;\n      hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n    }\n    this.hull = new Uint32Array(hullSize);\n    for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n      this.hull[i] = e;\n      e = hullNext[e];\n    }\n\n    // trim typed triangle mesh arrays\n    this.triangles = this._triangles.subarray(0, this.trianglesLen);\n    this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n  }\n  _hashKey(x, y) {\n    return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n  }\n  _legalize(a) {\n    const {\n      _triangles: triangles,\n      _halfedges: halfedges,\n      coords\n    } = this;\n    let i = 0;\n    let ar = 0;\n\n    // recursion eliminated with a fixed-size stack\n    while (true) {\n      const b = halfedges[a];\n\n      /* if the pair of triangles doesn't satisfy the Delaunay condition\n       * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n       * then do the same check/flip recursively for the new pair of triangles\n       *\n       *           pl                    pl\n       *          /||\\                  /  \\\n       *       al/ || \\bl            al/    \\a\n       *        /  ||  \\              /      \\\n       *       /  a||b  \\    flip    /___ar___\\\n       *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n       *        \\  ||  /              \\      /\n       *       ar\\ || /br             b\\    /br\n       *          \\||/                  \\  /\n       *           pr                    pr\n       */\n      const a0 = a - a % 3;\n      ar = a0 + (a + 2) % 3;\n      if (b === -1) {\n        // convex hull edge\n        if (i === 0) break;\n        a = EDGE_STACK[--i];\n        continue;\n      }\n      const b0 = b - b % 3;\n      const al = a0 + (a + 1) % 3;\n      const bl = b0 + (b + 2) % 3;\n      const p0 = triangles[ar];\n      const pr = triangles[a];\n      const pl = triangles[al];\n      const p1 = triangles[bl];\n      const illegal = inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1]);\n      if (illegal) {\n        triangles[a] = p1;\n        triangles[b] = p0;\n        const hbl = halfedges[bl];\n\n        // edge swapped on the other side of the hull (rare); fix the halfedge reference\n        if (hbl === -1) {\n          let e = this._hullStart;\n          do {\n            if (this._hullTri[e] === bl) {\n              this._hullTri[e] = a;\n              break;\n            }\n            e = this._hullPrev[e];\n          } while (e !== this._hullStart);\n        }\n        this._link(a, hbl);\n        this._link(b, halfedges[ar]);\n        this._link(ar, bl);\n        const br = b0 + (b + 1) % 3;\n\n        // don't worry about hitting the cap: it can only happen on extremely degenerate input\n        if (i < EDGE_STACK.length) {\n          EDGE_STACK[i++] = br;\n        }\n      } else {\n        if (i === 0) break;\n        a = EDGE_STACK[--i];\n      }\n    }\n    return ar;\n  }\n  _link(a, b) {\n    this._halfedges[a] = b;\n    if (b !== -1) this._halfedges[b] = a;\n  }\n\n  // add a new triangle given vertex indices and adjacent half-edge ids\n  _addTriangle(i0, i1, i2, a, b, c) {\n    const t = this.trianglesLen;\n    this._triangles[t] = i0;\n    this._triangles[t + 1] = i1;\n    this._triangles[t + 2] = i2;\n    this._link(t, a);\n    this._link(t + 1, b);\n    this._link(t + 2, c);\n    this.trianglesLen += 3;\n    return t;\n  }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n  const p = dx / (Math.abs(dx) + Math.abs(dy));\n  return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\nfunction dist(ax, ay, bx, by) {\n  const dx = ax - bx;\n  const dy = ay - by;\n  return dx * dx + dy * dy;\n}\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const ex = cx - ax;\n  const ey = cy - ay;\n  const bl = dx * dx + dy * dy;\n  const cl = ex * ex + ey * ey;\n  const d = 0.5 / (dx * ey - dy * ex);\n  const x = (ey * bl - dy * cl) * d;\n  const y = (dx * cl - ex * bl) * d;\n  return x * x + y * y;\n}\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n  const dx = bx - ax;\n  const dy = by - ay;\n  const ex = cx - ax;\n  const ey = cy - ay;\n  const bl = dx * dx + dy * dy;\n  const cl = ex * ex + ey * ey;\n  const d = 0.5 / (dx * ey - dy * ex);\n  const x = ax + (ey * bl - dy * cl) * d;\n  const y = ay + (dx * cl - ex * bl) * d;\n  return {\n    x,\n    y\n  };\n}\nfunction quicksort(ids, dists, left, right) {\n  if (right - left <= 20) {\n    for (let i = left + 1; i <= right; i++) {\n      const temp = ids[i];\n      const tempDist = dists[temp];\n      let j = i - 1;\n      while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n      ids[j + 1] = temp;\n    }\n  } else {\n    const median = left + right >> 1;\n    let i = left + 1;\n    let j = right;\n    swap(ids, median, i);\n    if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n    if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n    if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n    const temp = ids[i];\n    const tempDist = dists[temp];\n    while (true) {\n      do i++; while (dists[ids[i]] < tempDist);\n      do j--; while (dists[ids[j]] > tempDist);\n      if (j < i) break;\n      swap(ids, i, j);\n    }\n    ids[left + 1] = ids[j];\n    ids[j] = temp;\n    if (right - i + 1 >= j - left) {\n      quicksort(ids, dists, i, right);\n      quicksort(ids, dists, left, j - 1);\n    } else {\n      quicksort(ids, dists, left, j - 1);\n      quicksort(ids, dists, i, right);\n    }\n  }\n}\nfunction swap(arr, i, j) {\n  const tmp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = tmp;\n}\nfunction defaultGetX(p) {\n  return p[0];\n}\nfunction defaultGetY(p) {\n  return p[1];\n}","import React, { Component } from 'react'\r\nimport { loadableP5 as P5Wrapper } from '../components/loadable'\r\nimport { getRandomArbitrary, getRandomFromArray } from '../helpers'\r\nimport p5, { Vector } from 'p5'\r\nimport Delaunator from 'delaunator'\r\n\r\nlet triangles\r\nlet canvasSize = 600\r\nlet vertexAmt\r\nlet vertex\r\n\r\nlet palette = [\r\n  '#413C58',\r\n  '#A3C4BC',\r\n  '#BFD7B5',\r\n  '#E7EFC5',\r\n  '#F2DDA4'\r\n]\r\n\r\nfunction Sketch(p5) {\r\n  // make into helper...\r\n  function getRandomFromArray(items) {\r\n    let result = items[Math.floor(Math.random() * items.length)]\r\n    return result\r\n  }\r\n\r\n  p5.setup = () => {\r\n    p5.createCanvas(600, 600)\r\n    p5.background(255)\r\n    initializeTriangulation()\r\n  }\r\n\r\n  p5.draw = () => {\r\n    p5.background(0)\r\n    triangles.forEach(t => t.draw())\r\n  }\r\n\r\n  p5.mouseClicked = () => {\r\n    initializeTriangulation()\r\n  }\r\n\r\n  function initializeTriangulation() {\r\n    triangles = [];\r\n    let pts = [];\r\n    // push canvas rect points\r\n    pts.push(p5.createVector(0, 0))\r\n    pts.push(p5.createVector(p5.width, 0))\r\n    pts.push(p5.createVector(p5.width, p5.height))\r\n    pts.push(p5.createVector(0, p5.height))\r\n\r\n    var n = 20\r\n    for (let i = 0; i < n; i++) {\r\n      pts.push(p5.createVector(~~p5.random(p5.width), ~~p5.random(p5.height)))\r\n    }\r\n\r\n    // Delaunay.triangulate expect a list of vertices (which should be a bunch of two-element arrays, representing 2D Euclidean points)\r\n    // and it will return you a giant array, arranged in triplets, representing triangles by indices into the passed array\r\n    // Array.map function let's us create an Array of 2 elements arrays [ [x,y],[x,y],..] from our array of PVector [ PVector(x,y), PVector(x,y), ... ]\r\n    let delunaySource = pts.map(pt => [pt.x, pt.y]).flat(Infinity)\r\n    const triangulation = new Delaunator(delunaySource)\r\n\r\n    //create Triangles object using indices returned by Delaunay.triangulate\r\n    for (let i = 0; i < triangulation.triangles.length; i += 3) {\r\n      triangles.push(new Triangle(\r\n        pts[triangulation.triangles[i]],\r\n        pts[triangulation.triangles[i + 1]],\r\n        pts[triangulation.triangles[i + 2]]\r\n      ))\r\n    }\r\n  }\r\n\r\n  function Triangle(_a, _b, _c) {\r\n    this.a = _a\r\n    this.b = _b\r\n    this.c = _c\r\n    this.fill = getRandomFromArray(palette)\r\n    this.strokeColor = getRandomFromArray(palette)\r\n\r\n    this.draw = function () {\r\n      p5.fill(this.fill)\r\n      p5.stroke(30)\r\n      p5.strokeJoin(p5.BEVEL)\r\n      p5.strokeWeight(8)\r\n      p5.triangle(this.a.x, this.a.y, this.b.x, this.b.y, this.c.x, this.c.y)\r\n    }\r\n  }\r\n}\r\n\r\nexport default class Tris extends Component {\r\n  render() {\r\n    return <P5Wrapper sketch={Sketch} />\r\n  }\r\n}\r\n","import React, { useLayoutEffect } from \"react\"\r\nimport Layout from '../components/Layout'\r\nimport DancingLines from \"../sketches/DancingLines\"\r\nimport ProbableFuture from \"../sketches/ProbableFuture\"\r\nimport Fragment from \"../sketches/Fragment\"\r\nimport Mosaic from '../sketches/mosaic'\r\nimport Protocol from '../sketches/protocol'\r\nimport Poster from '../sketches/poster'\r\nimport Tris from '../sketches/tris'\r\nimport \"tachyons/css/tachyons.min.css\"\r\n\r\nlet sketches = {\r\n  dancingLines: <DancingLines />,\r\n  probableFuture: <ProbableFuture />,\r\n  fragment: <Fragment />,\r\n  mosaic: <Mosaic />,\r\n  protocol: <Protocol />,\r\n  poster: <Poster />,\r\n  tris: <Tris />,\r\n}\r\n\r\nconst BasicTemplate = (props) => {\r\n  let sketch\r\n  const { pageContext } = props\r\n  const { pageContent } = pageContext\r\n\r\n  for (const [key, value] of Object.entries(sketches)) {\r\n    if (pageContent[2].item.toLowerCase() === key.toLowerCase()) sketch = value\r\n  }\r\n\r\n  !sketch && console.log(\"Sketch not found...\")\r\n\r\n  let title = pageContent[0].item\r\n  let description = pageContent[1].item\r\n  let columns = pageContent[3]?.item\r\n  \r\n  return (\r\n    <Layout isDarkMode={false}>\r\n      <div className=\"flex pt5\">\r\n        <div className=\"pr3 flex flex1\">\r\n          <div>\r\n            <p className=\"b f2\">{title}</p>\r\n            <p className=\"f4 lh-copy measure\">{description}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex2\">\r\n          {sketch}\r\n        </div>\r\n      </div>\r\n    </Layout>        \r\n  )\r\n}\r\n\r\nexport default BasicTemplate\r\n","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"names":["randomColor","seed","colorDictionary","loadColorBounds","colorRanges","options","undefined","parseInt","stringToInteger","TypeError","H","S","count","totalColors","colors","i","push","length","color","setFormat","pickHue","pickSaturation","pickBrightness","hue","randomWithin","hueRange","getRealHueRange","step","j","getHueRange","luminosity","saturationRange","getSaturationRange","sMin","sMax","bMin","getMinimumBrightness","bMax","hsv","format","HSVtoHSL","hsl","hslColor","alpha","Math","random","HSVtoRGB","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","m","colorInput","number","match","HexToHSB","colorName","range","golden_ratio","r","floor","max","min","rnd","rgb","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","g","b","replace","red","substr","green","blue","cMax","delta","saturation","k","round","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN","factory","module","exports","getRandomArbitrary","dancingLine1","dancingLine2","worm1","worm2","Sketch","p5","worm","_ref","weight","console","log","history","createVector","x1Angle","y1Angle","r1","width","linesAmt","xoff","display","n","noise","map","splice","set","sin","x","y","stroke","strokeWeight","strokeCap","PROJECT","beginShape","forEach","linea","curveVertex","endShape","x1AngleOff","y1AngleOff","setup","wormOpts1","height","wormOpts2","createCanvas","background","dancingLine","draw","translate","flip","col","x2Angle","y2Angle","r2","line","x2AngleOff","y2AngleOff","DancingLines","_Component","apply","arguments","_inheritsLoose","prototype","render","React","P5Wrapper","sketch","Component","grid","canvasWidth","WEBGL","smooth","cols","rows","randomLevelFromHsl","size","randomFromRange","circle","_grid","rotateX","frameRate","slide","fillColor","xpos","ypos","noStroke","fill","ellipse","amt","mult","toFixed","img","ProbableFuture","w","matrix","buildNewMatrix","xS","yS","preload","loadImage","_newCols","mouseX","newCols","ceil","_newRows","mouseY","newRows","image","cell","get","saveColors","array","shuffleArray","ellipseMode","CORNER","Fragment","canvas","xSpacing","ySpacing","dotsSize","gridAmount","palette","getRandomFromArray","items","Spot","_x","_y","yoff","randomNumber","HALF_PI","PI","TWO_PI","randomDeg","rotate","col1","arc","col2","col3","col4","randomSign","pop","frameCount","mouseOver","mouseOut","_items","_toConsumableArray","randomColId","bg","getColors","Mosaic","circle1","circle2","squares","c1Opts","c2Opts","squaresOpts","cropElement","opts","angle","introAngle","outroAngle","posArray","introPosArray","outroPosArray","animation","resting","fade","isFill","drawingSettings","noFill","generatePositions","angleMode","DEGREES","minSize","maxSize","evenRandomNumber","cropRadius","strokeMin","strokeMax","pos","subtractor","rotation","rectMode","CENTER","rect","outroRotation","blendMode","REPLACE","DIFFERENCE","filter","INVERT","Protocol","randomXposForBubbles","randomYposForBubbles","randomXposForRects","randomYposForRects","randomXposForLines","randomYposForLines","colsArray","randomSizesForBubbles","randomSizesForRects","colorTonesForBubbles","colorTonesForRect","collectionOfRotations","linesAngle","collectionOfLengths","someWord","initialBubblesXPos","initialBubblesYPos","textArray","bubblesArr","linesArr","canvasX","canvasY","amountOfBubbles","amountOfRects","amountOfLines","Bubble","initialXpos","initialYpos","indexOfArrayOfRandomXposForBubbles","indexOfArrayOfRandomYposForBubbles","randomSizesArr","this","target","vel","strength","drag","diameter","tone","wobble","force","Vector","sub","add","returnlinesAngle","returnCollectionOfLengths","lengthMax","lengthsArray","collectionOfLengthsElement","xPos","yPos","fromAngle","acc","slideIn","SQUARE","addText","textSize","textAlign","textFont","text","returnCollectionOfColorTones","colsArrayItem","colVarAmt","lightnessRandom","colorValues","stringInHsl","tono","satArray","substring","indexOf","split","l","lightness","returnArrFromHslColor","colorMode","HSB","evenRandomNums","returnArrOfRandomSizes","returnCollectionOfRotations","returnRandomFromArray","rot","o","elementSize","drawRects","mouseClicked","elmntSizeMin","elmntSizeMax","arr","Poster","epsilon","elen","e","flen","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","Float64Array","ccwerrboundB","ccwerrboundC","B","C1","C2","D","u","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","abs","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_i","_j","_0","s0","t1","t0","u3","acx","bcx","acy","bcy","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","from","points","getX","defaultGetX","getY","defaultGetY","coords","constructor","Error","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","i0","i1","i2","minDist","d","dist","i0x","i0y","i1x","i1y","minRadius","circumradius","i2x","i2y","quicksort","hull","d0","id","subarray","triangles","halfedges","center","dx","dy","ex","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","start","key","_legalize","pseudoAngle","a","ar","a0","b0","al","p0","pr","pl","p1","inCircle","hbl","_link","br","px","py","fx","fy","bp","cp","ids","dists","left","right","temp","tempDist","swap","tmp","initializeTriangulation","pts","delunaySource","pt","flat","triangulation","Triangle","_a","_b","_c","strokeColor","strokeJoin","BEVEL","triangle","Tris","sketches","dancingLines","probableFuture","fragment","mosaic","protocol","poster","tris","props","_pageContent$","pageContext","pageContent","value","Object","entries","item","toLowerCase","title","description","Layout","isDarkMode","className","_typeof","_regeneratorRuntime","__esModule","hasOwnProperty","defineProperty","Symbol","iterator","asyncIterator","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","values","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","runtime","regeneratorRuntime","accidentalStrictMode","globalThis","Function"],"sourceRoot":""}