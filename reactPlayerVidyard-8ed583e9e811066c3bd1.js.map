{"version":3,"file":"reactPlayerVidyard-8ed583e9e811066c3bd1.js","mappings":"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","sources":["webpack://giorgio-martini-website/./node_modules/.pnpm/react-player@2.16.0_react@17.0.2/node_modules/react-player/lib/players/Vidyard.js"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar Vidyard_exports = {};\n__export(Vidyard_exports, {\n  default: () => Vidyard\n});\nmodule.exports = __toCommonJS(Vidyard_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://play.vidyard.com/embed/v4.js\";\nconst SDK_GLOBAL = \"VidyardV4\";\nconst SDK_GLOBAL_READY = \"onVidyardAPI\";\nclass Vidyard extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"mute\", () => {\n      this.setVolume(0);\n    });\n    __publicField(this, \"unmute\", () => {\n      if (this.props.volume !== null) {\n        this.setVolume(this.props.volume);\n      }\n    });\n    __publicField(this, \"ref\", container => {\n      this.container = container;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  load(url) {\n    const {\n      playing,\n      config,\n      onError,\n      onDuration\n    } = this.props;\n    const id = url && url.match(import_patterns.MATCH_URL_VIDYARD)[1];\n    if (this.player) {\n      this.stop();\n    }\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY).then(Vidyard2 => {\n      if (!this.container) return;\n      Vidyard2.api.addReadyListener((data, player) => {\n        if (this.player) {\n          return;\n        }\n        this.player = player;\n        this.player.on(\"ready\", this.props.onReady);\n        this.player.on(\"play\", this.props.onPlay);\n        this.player.on(\"pause\", this.props.onPause);\n        this.player.on(\"seek\", this.props.onSeek);\n        this.player.on(\"playerComplete\", this.props.onEnded);\n      }, id);\n      Vidyard2.api.renderPlayer({\n        uuid: id,\n        container: this.container,\n        autoplay: playing ? 1 : 0,\n        ...config.options\n      });\n      Vidyard2.api.getPlayerMetadata(id).then(meta => {\n        this.duration = meta.length_in_seconds;\n        onDuration(meta.length_in_seconds);\n      });\n    }, onError);\n  }\n  play() {\n    this.callPlayer(\"play\");\n  }\n  pause() {\n    this.callPlayer(\"pause\");\n  }\n  stop() {\n    window.VidyardV4.api.destroyPlayer(this.player);\n  }\n  seekTo(amount) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.callPlayer(\"seek\", amount);\n    if (!keepPlaying) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction);\n  }\n  setPlaybackRate(rate) {\n    this.callPlayer(\"setPlaybackSpeed\", rate);\n  }\n  getDuration() {\n    return this.duration;\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"currentTime\");\n  }\n  getSecondsLoaded() {\n    return null;\n  }\n  render() {\n    const {\n      display\n    } = this.props;\n    const style = {\n      width: \"100%\",\n      height: \"100%\",\n      display\n    };\n    return /* @__PURE__ */import_react.default.createElement(\"div\", {\n      style\n    }, /* @__PURE__ */import_react.default.createElement(\"div\", {\n      ref: this.ref\n    }));\n  }\n}\n__publicField(Vidyard, \"displayName\", \"Vidyard\");\n__publicField(Vidyard, \"canPlay\", import_patterns.canPlay.vidyard);"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","Vidyard_exports","target","all","name","__export","default","Vidyard","module","exports","import_react","isNodeMode","__esModule","__toESM","import_utils","import_patterns","Component","constructor","super","arguments","this","callPlayer","setVolume","props","volume","container","componentDidMount","onMount","load","url","playing","config","onError","onDuration","id","match","MATCH_URL_VIDYARD","player","stop","getSDK","then","Vidyard2","api","addReadyListener","data","on","onReady","onPlay","onPause","onSeek","onEnded","renderPlayer","uuid","autoplay","options","getPlayerMetadata","meta","duration","length_in_seconds","play","pause","window","VidyardV4","destroyPlayer","seekTo","amount","keepPlaying","length","undefined","fraction","setPlaybackRate","rate","getDuration","getCurrentTime","getSecondsLoaded","render","display","style","width","height","createElement","ref","canPlay","vidyard"],"sourceRoot":""}