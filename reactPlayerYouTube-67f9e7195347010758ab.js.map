{"version":3,"file":"reactPlayerYouTube-67f9e7195347010758ab.js","mappings":"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","sources":["webpack://giorgio-martini-website/./node_modules/.pnpm/react-player@2.16.0_react@17.0.2/node_modules/react-player/lib/players/YouTube.js"],"sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from)) if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n      get: () => from[key],\n      enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n    });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n// If the importer is in node compatibility mode or this is not an ESM\n// file that has been converted to a CommonJS file using a Babel-\n// compatible transform (i.e. \"__esModule\" has not been set), then set\n// \"default\" to the CommonJS \"module.exports\" for node compatibility.\nisNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", {\n  value: mod,\n  enumerable: true\n}) : target, mod));\nvar __toCommonJS = mod => __copyProps(__defProp({}, \"__esModule\", {\n  value: true\n}), mod);\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar YouTube_exports = {};\n__export(YouTube_exports, {\n  default: () => YouTube\n});\nmodule.exports = __toCommonJS(YouTube_exports);\nvar import_react = __toESM(require(\"react\"));\nvar import_utils = require(\"../utils\");\nvar import_patterns = require(\"../patterns\");\nconst SDK_URL = \"https://www.youtube.com/iframe_api\";\nconst SDK_GLOBAL = \"YT\";\nconst SDK_GLOBAL_READY = \"onYouTubeIframeAPIReady\";\nconst MATCH_PLAYLIST = /[?&](?:list|channel)=([a-zA-Z0-9_-]+)/;\nconst MATCH_USER_UPLOADS = /user\\/([a-zA-Z0-9_-]+)\\/?/;\nconst MATCH_NOCOOKIE = /youtube-nocookie\\.com/;\nconst NOCOOKIE_HOST = \"https://www.youtube-nocookie.com\";\nclass YouTube extends import_react.Component {\n  constructor() {\n    super(...arguments);\n    __publicField(this, \"callPlayer\", import_utils.callPlayer);\n    __publicField(this, \"parsePlaylist\", url => {\n      if (url instanceof Array) {\n        return {\n          listType: \"playlist\",\n          playlist: url.map(this.getID).join(\",\")\n        };\n      }\n      if (MATCH_PLAYLIST.test(url)) {\n        const [, playlistId] = url.match(MATCH_PLAYLIST);\n        return {\n          listType: \"playlist\",\n          list: playlistId.replace(/^UC/, \"UU\")\n        };\n      }\n      if (MATCH_USER_UPLOADS.test(url)) {\n        const [, username] = url.match(MATCH_USER_UPLOADS);\n        return {\n          listType: \"user_uploads\",\n          list: username\n        };\n      }\n      return {};\n    });\n    __publicField(this, \"onStateChange\", event => {\n      const {\n        data\n      } = event;\n      const {\n        onPlay,\n        onPause,\n        onBuffer,\n        onBufferEnd,\n        onEnded,\n        onReady,\n        loop,\n        config: {\n          playerVars,\n          onUnstarted\n        }\n      } = this.props;\n      const {\n        UNSTARTED,\n        PLAYING,\n        PAUSED,\n        BUFFERING,\n        ENDED,\n        CUED\n      } = window[SDK_GLOBAL].PlayerState;\n      if (data === UNSTARTED) onUnstarted();\n      if (data === PLAYING) {\n        onPlay();\n        onBufferEnd();\n      }\n      if (data === PAUSED) onPause();\n      if (data === BUFFERING) onBuffer();\n      if (data === ENDED) {\n        const isPlaylist = !!this.callPlayer(\"getPlaylist\");\n        if (loop && !isPlaylist) {\n          if (playerVars.start) {\n            this.seekTo(playerVars.start);\n          } else {\n            this.play();\n          }\n        }\n        onEnded();\n      }\n      if (data === CUED) onReady();\n    });\n    __publicField(this, \"mute\", () => {\n      this.callPlayer(\"mute\");\n    });\n    __publicField(this, \"unmute\", () => {\n      this.callPlayer(\"unMute\");\n    });\n    __publicField(this, \"ref\", container => {\n      this.container = container;\n    });\n  }\n  componentDidMount() {\n    this.props.onMount && this.props.onMount(this);\n  }\n  getID(url) {\n    if (!url || url instanceof Array || MATCH_PLAYLIST.test(url)) {\n      return null;\n    }\n    return url.match(import_patterns.MATCH_URL_YOUTUBE)[1];\n  }\n  load(url, isReady) {\n    const {\n      playing,\n      muted,\n      playsinline,\n      controls,\n      loop,\n      config,\n      onError\n    } = this.props;\n    const {\n      playerVars,\n      embedOptions\n    } = config;\n    const id = this.getID(url);\n    if (isReady) {\n      if (MATCH_PLAYLIST.test(url) || MATCH_USER_UPLOADS.test(url) || url instanceof Array) {\n        this.player.loadPlaylist(this.parsePlaylist(url));\n        return;\n      }\n      this.player.cueVideoById({\n        videoId: id,\n        startSeconds: (0, import_utils.parseStartTime)(url) || playerVars.start,\n        endSeconds: (0, import_utils.parseEndTime)(url) || playerVars.end\n      });\n      return;\n    }\n    (0, import_utils.getSDK)(SDK_URL, SDK_GLOBAL, SDK_GLOBAL_READY, YT => YT.loaded).then(YT => {\n      if (!this.container) return;\n      this.player = new YT.Player(this.container, {\n        width: \"100%\",\n        height: \"100%\",\n        videoId: id,\n        playerVars: {\n          autoplay: playing ? 1 : 0,\n          mute: muted ? 1 : 0,\n          controls: controls ? 1 : 0,\n          start: (0, import_utils.parseStartTime)(url),\n          end: (0, import_utils.parseEndTime)(url),\n          origin: window.location.origin,\n          playsinline: playsinline ? 1 : 0,\n          ...this.parsePlaylist(url),\n          ...playerVars\n        },\n        events: {\n          onReady: () => {\n            if (loop) {\n              this.player.setLoop(true);\n            }\n            this.props.onReady();\n          },\n          onPlaybackRateChange: event => this.props.onPlaybackRateChange(event.data),\n          onPlaybackQualityChange: event => this.props.onPlaybackQualityChange(event),\n          onStateChange: this.onStateChange,\n          onError: event => onError(event.data)\n        },\n        host: MATCH_NOCOOKIE.test(url) ? NOCOOKIE_HOST : void 0,\n        ...embedOptions\n      });\n    }, onError);\n    if (embedOptions.events) {\n      console.warn(\"Using `embedOptions.events` will likely break things. Use ReactPlayer\\u2019s callback props instead, eg onReady, onPlay, onPause\");\n    }\n  }\n  play() {\n    this.callPlayer(\"playVideo\");\n  }\n  pause() {\n    this.callPlayer(\"pauseVideo\");\n  }\n  stop() {\n    if (!document.body.contains(this.callPlayer(\"getIframe\"))) return;\n    this.callPlayer(\"stopVideo\");\n  }\n  seekTo(amount) {\n    let keepPlaying = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    this.callPlayer(\"seekTo\", amount);\n    if (!keepPlaying && !this.props.playing) {\n      this.pause();\n    }\n  }\n  setVolume(fraction) {\n    this.callPlayer(\"setVolume\", fraction * 100);\n  }\n  setPlaybackRate(rate) {\n    this.callPlayer(\"setPlaybackRate\", rate);\n  }\n  setLoop(loop) {\n    this.callPlayer(\"setLoop\", loop);\n  }\n  getDuration() {\n    return this.callPlayer(\"getDuration\");\n  }\n  getCurrentTime() {\n    return this.callPlayer(\"getCurrentTime\");\n  }\n  getSecondsLoaded() {\n    return this.callPlayer(\"getVideoLoadedFraction\") * this.getDuration();\n  }\n  render() {\n    const {\n      display\n    } = this.props;\n    const style = {\n      width: \"100%\",\n      height: \"100%\",\n      display\n    };\n    return /* @__PURE__ */import_react.default.createElement(\"div\", {\n      style\n    }, /* @__PURE__ */import_react.default.createElement(\"div\", {\n      ref: this.ref\n    }));\n  }\n}\n__publicField(YouTube, \"displayName\", \"YouTube\");\n__publicField(YouTube, \"canPlay\", import_patterns.canPlay.youtube);"],"names":["mod","__create","Object","create","__defProp","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","__publicField","obj","value","configurable","writable","__defNormalProp","YouTube_exports","target","all","name","__export","default","YouTube","module","exports","import_react","isNodeMode","__esModule","__toESM","import_utils","import_patterns","MATCH_PLAYLIST","MATCH_USER_UPLOADS","MATCH_NOCOOKIE","Component","constructor","super","arguments","this","callPlayer","url","Array","listType","playlist","map","getID","join","test","playlistId","match","list","replace","username","event","data","onPlay","onPause","onBuffer","onBufferEnd","onEnded","onReady","loop","config","playerVars","onUnstarted","props","UNSTARTED","PLAYING","PAUSED","BUFFERING","ENDED","CUED","window","PlayerState","isPlaylist","start","seekTo","play","container","componentDidMount","onMount","MATCH_URL_YOUTUBE","load","isReady","playing","muted","playsinline","controls","onError","embedOptions","id","player","loadPlaylist","parsePlaylist","cueVideoById","videoId","startSeconds","parseStartTime","endSeconds","parseEndTime","end","getSDK","YT","loaded","then","Player","width","height","autoplay","mute","origin","location","events","setLoop","onPlaybackRateChange","onPlaybackQualityChange","onStateChange","host","console","warn","pause","stop","document","body","contains","amount","keepPlaying","length","undefined","setVolume","fraction","setPlaybackRate","rate","getDuration","getCurrentTime","getSecondsLoaded","render","display","style","createElement","ref","canPlay","youtube"],"sourceRoot":""}